"use strict";var SearchkitInstantsearchClientDefault=(()=>{var a=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var f=(r,e)=>{for(var t in e)a(r,t,{get:e[t],enumerable:!0})},l=(r,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of u(e))!p.call(r,i)&&i!==t&&a(r,i,{get:()=>e[i],enumerable:!(s=h(e,i))||s.enumerable});return r};var g=r=>l(a({},"__esModule",{value:!0}),r);var S={};f(S,{default:()=>y});function n(r){return r.handleInstantSearchRequests!==void 0}var c=class{constructor(e,t){this.config=e;this.requestOptions=t;this.cache={};if(!n(this.config)&&!this.config.url)throw new Error("Searchkit Instantsearch Client: url is required");if(!n(this.config)&&this.requestOptions)throw new Error("Searchkit Instantsearch Client: requestOptions is not supported when used with url. Add the request options to @searchkit/api instead.")}clearCache(){return this.cache={},Promise.resolve(void 0)}getHeaders(){let e={};return!n(this.config)&&this.config.headers&&(e=typeof this.config.headers=="function"?this.config.headers():this.config.headers),e}async search(e){try{let t=JSON.stringify(e);if(this.cache[t])return this.cache[t];if(n(this.config)){let o=await this.config.handleInstantSearchRequests(e,this.requestOptions);return this.cache[t]=o,o}let i=await(await fetch(this.config.url,{body:JSON.stringify(e),headers:{"Content-Type":"application/json",...this.getHeaders()},method:"POST"})).json();return this.cache[t]=i,i}catch(t){return console.error(t),[]}}async searchForFacetValues(e){let t=e.map(s=>({...s,params:{...s.params,hitsPerPage:0}}));try{return n(this.config)?(await this.config.handleInstantSearchRequests(t)).results:(await(await fetch(this.config.url,{body:JSON.stringify(t),headers:{"Content-Type":"application/json",...this.getHeaders()},method:"POST"})).json()).results}catch(s){return console.error(s),[]}}},d=(r,e)=>new c(r,e),y=d;return g(S);})();
var SearchkitInstantsearchClient = SearchkitInstantsearchClientDefault.default
//# sourceMappingURL=index.global.js.map