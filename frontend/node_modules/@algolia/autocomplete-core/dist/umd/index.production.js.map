{"version":3,"file":"index.production.js","sources":["../../../autocomplete-shared/dist/esm/debounce.js","../../../autocomplete-shared/dist/esm/flatten.js","../../../autocomplete-shared/dist/esm/generateAutocompleteId.js","../../../autocomplete-shared/dist/esm/getItemsCount.js","../../../autocomplete-shared/dist/esm/isEqual.js","../../../autocomplete-shared/dist/esm/noop.js","../../../autocomplete-shared/dist/esm/version.js","../../../autocomplete-shared/dist/esm/userAgents.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createClickedEvent.js","../../../autocomplete-plugin-algolia-insights/dist/esm/isModernInsightsClient.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createSearchInsightsApi.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createViewedEvents.js","../../../autocomplete-plugin-algolia-insights/dist/esm/isAlgoliaInsightsHit.js","../../../autocomplete-plugin-algolia-insights/dist/esm/createAlgoliaInsightsPlugin.js","../../../autocomplete-shared/dist/esm/safelyRunOnBrowser.js","../../../autocomplete-shared/dist/esm/createRef.js","../../src/utils/createCancelablePromise.ts","../../src/utils/getNextActiveItemId.ts","../../src/utils/getActiveItem.ts","../../src/utils/isSamsung.ts","../../src/getDefaultProps.ts","../../src/utils/getNormalizedSources.ts","../../src/resolve.ts","../../src/utils/mapToAlgoliaResponse.ts","../../src/utils/createConcurrentSafePromise.ts","../../src/onInput.ts","../../src/reshape.ts","../../src/getPropGetters.ts","../../src/utils/isOrContainsNode.ts","../../src/onKeyDown.ts","../../src/metadata.ts","../../src/getCompletion.ts","../../src/stateReducer.ts","../../src/createAutocomplete.ts","../../src/createStore.ts","../../src/utils/createCancelablePromiseList.ts","../../src/getAutocompleteSetters.ts"],"sourcesContent":["export function debounce(fn, time) {\n  var timerId = undefined;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(function () {\n      return fn.apply(void 0, args);\n    }, time);\n  };\n}","export function flatten(values) {\n  return values.reduce(function (a, b) {\n    return a.concat(b);\n  }, []);\n}","var autocompleteId = 0;\nexport function generateAutocompleteId() {\n  return \"autocomplete-\".concat(autocompleteId++);\n}","export function getItemsCount(state) {\n  if (state.collections.length === 0) {\n    return 0;\n  }\n  return state.collections.reduce(function (sum, collection) {\n    return sum + collection.items.length;\n  }, 0);\n}","function isPrimitive(obj) {\n  return obj !== Object(obj);\n}\nexport function isEqual(first, second) {\n  if (first === second) {\n    return true;\n  }\n  if (isPrimitive(first) || isPrimitive(second) || typeof first === 'function' || typeof second === 'function') {\n    return first === second;\n  }\n  if (Object.keys(first).length !== Object.keys(second).length) {\n    return false;\n  }\n  for (var _i = 0, _Object$keys = Object.keys(first); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (!(key in second)) {\n      return false;\n    }\n    if (!isEqual(first[key], second[key])) {\n      return false;\n    }\n  }\n  return true;\n}","export var noop = function noop() {};","export var version = '1.9.4';","import { version } from './version';\nexport var userAgents = [{\n  segment: 'autocomplete-core',\n  version: version\n}];","export function createClickedEvent(_ref) {\n  var item = _ref.item,\n    _ref$items = _ref.items,\n    items = _ref$items === void 0 ? [] : _ref$items;\n  return {\n    index: item.__autocomplete_indexName,\n    items: [item],\n    positions: [1 + items.findIndex(function (x) {\n      return x.objectID === item.objectID;\n    })],\n    queryID: item.__autocomplete_queryID,\n    algoliaSource: ['autocomplete']\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/**\n * Determines if a given insights `client` supports the optional call to `init`\n * and the ability to set credentials via extra parameters when sending events.\n */\nexport function isModernInsightsClient(client) {\n  var _split$map = (client.version || '').split('.').map(Number),\n    _split$map2 = _slicedToArray(_split$map, 2),\n    major = _split$map2[0],\n    minor = _split$map2[1];\n\n  /* eslint-disable @typescript-eslint/camelcase */\n  var v3 = major >= 3;\n  var v2_4 = major === 2 && minor >= 4;\n  var v1_10 = major === 1 && minor >= 10;\n  return v3 || v2_4 || v1_10;\n  /* eslint-enable @typescript-eslint/camelcase */\n}","var _excluded = [\"items\"],\n  _excluded2 = [\"items\"];\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isModernInsightsClient } from './isModernInsightsClient';\nfunction chunk(item) {\n  var chunkSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n  var chunks = [];\n  for (var i = 0; i < item.objectIDs.length; i += chunkSize) {\n    chunks.push(_objectSpread(_objectSpread({}, item), {}, {\n      objectIDs: item.objectIDs.slice(i, i + chunkSize)\n    }));\n  }\n  return chunks;\n}\nfunction mapToInsightsParamsApi(params) {\n  return params.map(function (_ref) {\n    var items = _ref.items,\n      param = _objectWithoutProperties(_ref, _excluded);\n    return _objectSpread(_objectSpread({}, param), {}, {\n      objectIDs: (items === null || items === void 0 ? void 0 : items.map(function (_ref2) {\n        var objectID = _ref2.objectID;\n        return objectID;\n      })) || param.objectIDs\n    });\n  });\n}\nexport function createSearchInsightsApi(searchInsights) {\n  var canSendHeaders = isModernInsightsClient(searchInsights);\n  function sendToInsights(method, payloads, items) {\n    if (canSendHeaders && typeof items !== 'undefined') {\n      var _items$0$__autocomple = items[0].__autocomplete_algoliaCredentials,\n        appId = _items$0$__autocomple.appId,\n        apiKey = _items$0$__autocomple.apiKey;\n      var headers = {\n        'X-Algolia-Application-Id': appId,\n        'X-Algolia-API-Key': apiKey\n      };\n      searchInsights.apply(void 0, [method].concat(_toConsumableArray(payloads), [{\n        headers: headers\n      }]));\n    } else {\n      searchInsights.apply(void 0, [method].concat(_toConsumableArray(payloads)));\n    }\n  }\n  return {\n    /**\n     * Initializes Insights with Algolia credentials.\n     */\n    init: function init(appId, apiKey) {\n      searchInsights('init', {\n        appId: appId,\n        apiKey: apiKey\n      });\n    },\n    /**\n     * Sets the user token to attach to events.\n     */\n    setUserToken: function setUserToken(userToken) {\n      searchInsights('setUserToken', userToken);\n    },\n    /**\n     * Sends click events to capture a query and its clicked items and positions.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids-after-search/\n     */\n    clickedObjectIDsAfterSearch: function clickedObjectIDsAfterSearch() {\n      for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n        params[_key] = arguments[_key];\n      }\n      if (params.length > 0) {\n        sendToInsights('clickedObjectIDsAfterSearch', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends click events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-object-ids/\n     */\n    clickedObjectIDs: function clickedObjectIDs() {\n      for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        params[_key2] = arguments[_key2];\n      }\n      if (params.length > 0) {\n        sendToInsights('clickedObjectIDs', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends click events to capture the filters a user clicks on.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/clicked-filters/\n     */\n    clickedFilters: function clickedFilters() {\n      for (var _len3 = arguments.length, params = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        params[_key3] = arguments[_key3];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['clickedFilters'].concat(params));\n      }\n    },\n    /**\n     * Sends conversion events to capture a query and its clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids-after-search/\n     */\n    convertedObjectIDsAfterSearch: function convertedObjectIDsAfterSearch() {\n      for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        params[_key4] = arguments[_key4];\n      }\n      if (params.length > 0) {\n        sendToInsights('convertedObjectIDsAfterSearch', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends conversion events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-object-ids/\n     */\n    convertedObjectIDs: function convertedObjectIDs() {\n      for (var _len5 = arguments.length, params = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        params[_key5] = arguments[_key5];\n      }\n      if (params.length > 0) {\n        sendToInsights('convertedObjectIDs', mapToInsightsParamsApi(params), params[0].items);\n      }\n    },\n    /**\n     * Sends conversion events to capture the filters a user uses when converting.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/converted-filters/\n     */\n    convertedFilters: function convertedFilters() {\n      for (var _len6 = arguments.length, params = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        params[_key6] = arguments[_key6];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['convertedFilters'].concat(params));\n      }\n    },\n    /**\n     * Sends view events to capture clicked items.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-object-ids/\n     */\n    viewedObjectIDs: function viewedObjectIDs() {\n      for (var _len7 = arguments.length, params = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        params[_key7] = arguments[_key7];\n      }\n      if (params.length > 0) {\n        params.reduce(function (acc, _ref3) {\n          var items = _ref3.items,\n            param = _objectWithoutProperties(_ref3, _excluded2);\n          return [].concat(_toConsumableArray(acc), _toConsumableArray(chunk(_objectSpread(_objectSpread({}, param), {}, {\n            objectIDs: (items === null || items === void 0 ? void 0 : items.map(function (_ref4) {\n              var objectID = _ref4.objectID;\n              return objectID;\n            })) || param.objectIDs\n          })).map(function (payload) {\n            return {\n              items: items,\n              payload: payload\n            };\n          })));\n        }, []).forEach(function (_ref5) {\n          var items = _ref5.items,\n            payload = _ref5.payload;\n          return sendToInsights('viewedObjectIDs', [payload], items);\n        });\n      }\n    },\n    /**\n     * Sends view events to capture the filters a user uses when viewing.\n     *\n     * @link https://www.algolia.com/doc/api-reference/api-methods/viewed-filters/\n     */\n    viewedFilters: function viewedFilters() {\n      for (var _len8 = arguments.length, params = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        params[_key8] = arguments[_key8];\n      }\n      if (params.length > 0) {\n        searchInsights.apply(void 0, ['viewedFilters'].concat(params));\n      }\n    }\n  };\n}","export function createViewedEvents(_ref) {\n  var items = _ref.items;\n  var itemsByIndexName = items.reduce(function (acc, current) {\n    var _acc$current$__autoco;\n    acc[current.__autocomplete_indexName] = ((_acc$current$__autoco = acc[current.__autocomplete_indexName]) !== null && _acc$current$__autoco !== void 0 ? _acc$current$__autoco : []).concat(current);\n    return acc;\n  }, {});\n  return Object.keys(itemsByIndexName).map(function (indexName) {\n    var items = itemsByIndexName[indexName];\n    return {\n      index: indexName,\n      items: items,\n      algoliaSource: ['autocomplete']\n    };\n  });\n}","export function isAlgoliaInsightsHit(hit) {\n  return hit.objectID && hit.__autocomplete_indexName && hit.__autocomplete_queryID;\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { createRef, debounce, isEqual, noop, safelyRunOnBrowser } from '@algolia/autocomplete-shared';\nimport { createClickedEvent } from './createClickedEvent';\nimport { createSearchInsightsApi } from './createSearchInsightsApi';\nimport { createViewedEvents } from './createViewedEvents';\nimport { isAlgoliaInsightsHit } from './isAlgoliaInsightsHit';\nvar VIEW_EVENT_DELAY = 400;\nvar ALGOLIA_INSIGHTS_VERSION = '2.6.0';\nvar ALGOLIA_INSIGHTS_SRC = \"https://cdn.jsdelivr.net/npm/search-insights@\".concat(ALGOLIA_INSIGHTS_VERSION, \"/dist/search-insights.min.js\");\nvar sendViewedObjectIDs = debounce(function (_ref) {\n  var onItemsChange = _ref.onItemsChange,\n    items = _ref.items,\n    insights = _ref.insights,\n    state = _ref.state;\n  onItemsChange({\n    insights: insights,\n    insightsEvents: createViewedEvents({\n      items: items\n    }).map(function (event) {\n      return _objectSpread({\n        eventName: 'Items Viewed'\n      }, event);\n    }),\n    state: state\n  });\n}, VIEW_EVENT_DELAY);\nexport function createAlgoliaInsightsPlugin(options) {\n  var _getOptions = getOptions(options),\n    providedInsightsClient = _getOptions.insightsClient,\n    onItemsChange = _getOptions.onItemsChange,\n    onSelectEvent = _getOptions.onSelect,\n    onActiveEvent = _getOptions.onActive;\n  var insightsClient = providedInsightsClient;\n  if (!providedInsightsClient) {\n    safelyRunOnBrowser(function (_ref2) {\n      var window = _ref2.window;\n      var pointer = window.AlgoliaAnalyticsObject || 'aa';\n      if (typeof pointer === 'string') {\n        insightsClient = window[pointer];\n      }\n      if (!insightsClient) {\n        window.AlgoliaAnalyticsObject = pointer;\n        if (!window[pointer]) {\n          window[pointer] = function () {\n            if (!window[pointer].queue) {\n              window[pointer].queue = [];\n            }\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n            window[pointer].queue.push(args);\n          };\n        }\n        window[pointer].version = ALGOLIA_INSIGHTS_VERSION;\n        insightsClient = window[pointer];\n        loadInsights(window);\n      }\n    });\n  }\n  var insights = createSearchInsightsApi(insightsClient);\n  var previousItems = createRef([]);\n  var debouncedOnStateChange = debounce(function (_ref3) {\n    var state = _ref3.state;\n    if (!state.isOpen) {\n      return;\n    }\n    var items = state.collections.reduce(function (acc, current) {\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(current.items));\n    }, []).filter(isAlgoliaInsightsHit);\n    if (!isEqual(previousItems.current.map(function (x) {\n      return x.objectID;\n    }), items.map(function (x) {\n      return x.objectID;\n    }))) {\n      previousItems.current = items;\n      if (items.length > 0) {\n        sendViewedObjectIDs({\n          onItemsChange: onItemsChange,\n          items: items,\n          insights: insights,\n          state: state\n        });\n      }\n    }\n  }, 0);\n  return {\n    name: 'aa.algoliaInsightsPlugin',\n    subscribe: function subscribe(_ref4) {\n      var setContext = _ref4.setContext,\n        onSelect = _ref4.onSelect,\n        onActive = _ref4.onActive;\n      insightsClient('addAlgoliaAgent', 'insights-plugin');\n      setContext({\n        algoliaInsightsPlugin: {\n          __algoliaSearchParameters: {\n            clickAnalytics: true\n          },\n          insights: insights\n        }\n      });\n      onSelect(function (_ref5) {\n        var item = _ref5.item,\n          state = _ref5.state,\n          event = _ref5.event,\n          source = _ref5.source;\n        if (!isAlgoliaInsightsHit(item)) {\n          return;\n        }\n        onSelectEvent({\n          state: state,\n          event: event,\n          insights: insights,\n          item: item,\n          insightsEvents: [_objectSpread({\n            eventName: 'Item Selected'\n          }, createClickedEvent({\n            item: item,\n            items: source.getItems().filter(isAlgoliaInsightsHit)\n          }))]\n        });\n      });\n      onActive(function (_ref6) {\n        var item = _ref6.item,\n          source = _ref6.source,\n          state = _ref6.state,\n          event = _ref6.event;\n        if (!isAlgoliaInsightsHit(item)) {\n          return;\n        }\n        onActiveEvent({\n          state: state,\n          event: event,\n          insights: insights,\n          item: item,\n          insightsEvents: [_objectSpread({\n            eventName: 'Item Active'\n          }, createClickedEvent({\n            item: item,\n            items: source.getItems().filter(isAlgoliaInsightsHit)\n          }))]\n        });\n      });\n    },\n    onStateChange: function onStateChange(_ref7) {\n      var state = _ref7.state;\n      debouncedOnStateChange({\n        state: state\n      });\n    },\n    __autocomplete_pluginOptions: options\n  };\n}\nfunction getOptions(options) {\n  return _objectSpread({\n    onItemsChange: function onItemsChange(_ref8) {\n      var insights = _ref8.insights,\n        insightsEvents = _ref8.insightsEvents;\n      insights.viewedObjectIDs.apply(insights, _toConsumableArray(insightsEvents.map(function (event) {\n        return _objectSpread(_objectSpread({}, event), {}, {\n          algoliaSource: [].concat(_toConsumableArray(event.algoliaSource || []), ['autocomplete-internal'])\n        });\n      })));\n    },\n    onSelect: function onSelect(_ref9) {\n      var insights = _ref9.insights,\n        insightsEvents = _ref9.insightsEvents;\n      insights.clickedObjectIDsAfterSearch.apply(insights, _toConsumableArray(insightsEvents.map(function (event) {\n        return _objectSpread(_objectSpread({}, event), {}, {\n          algoliaSource: [].concat(_toConsumableArray(event.algoliaSource || []), ['autocomplete-internal'])\n        });\n      })));\n    },\n    onActive: noop\n  }, options);\n}\nfunction loadInsights(environment) {\n  var errorMessage = \"[Autocomplete]: Could not load search-insights.js. Please load it manually following https://alg.li/insights-autocomplete\";\n  try {\n    var script = environment.document.createElement('script');\n    script.async = true;\n    script.src = ALGOLIA_INSIGHTS_SRC;\n    script.onerror = function () {\n      // eslint-disable-next-line no-console\n      console.error(errorMessage);\n    };\n    document.body.appendChild(script);\n  } catch (cause) {\n    // eslint-disable-next-line no-console\n    console.error(errorMessage);\n  }\n}","/**\n * Safely runs code meant for browser environments only.\n */\nexport function safelyRunOnBrowser(callback) {\n  if (typeof window !== 'undefined') {\n    return callback({\n      window: window\n    });\n  }\n  return undefined;\n}","export function createRef(initialValue) {\n  return {\n    current: initialValue\n  };\n}","type PromiseExecutor<TValue> = (\n  resolve: (value: TValue | PromiseLike<TValue>) => void,\n  reject: (reason?: any) => void\n) => void;\n\ntype CancelablePromiseState = {\n  isCanceled: boolean;\n  onCancelList: Array<(...args: any[]) => any>;\n};\n\nfunction createInternalCancelablePromise<TValue>(\n  promise: Promise<TValue>,\n  initialState: CancelablePromiseState\n): CancelablePromise<TValue> {\n  const state = initialState;\n\n  return {\n    then(onfulfilled, onrejected) {\n      return createInternalCancelablePromise(\n        promise.then(\n          createCallback(onfulfilled, state, promise),\n          createCallback(onrejected, state, promise)\n        ),\n        state\n      );\n    },\n    catch(onrejected) {\n      return createInternalCancelablePromise(\n        promise.catch(createCallback(onrejected, state, promise)),\n        state\n      );\n    },\n    finally(onfinally) {\n      if (onfinally) {\n        state.onCancelList.push(onfinally);\n      }\n\n      return createInternalCancelablePromise<TValue>(\n        promise.finally(\n          createCallback(\n            onfinally &&\n              (() => {\n                state.onCancelList = [];\n\n                return onfinally();\n              }),\n            state,\n            promise\n          )\n        ),\n        state\n      );\n    },\n    cancel() {\n      state.isCanceled = true;\n      const callbacks = state.onCancelList;\n      state.onCancelList = [];\n\n      callbacks.forEach((callback) => {\n        callback();\n      });\n    },\n    isCanceled() {\n      return state.isCanceled === true;\n    },\n  };\n}\n\nexport type CancelablePromise<TValue> = {\n  then<TResultFulfilled = TValue, TResultRejected = never>(\n    onfulfilled?:\n      | ((\n          value: TValue\n        ) =>\n          | TResultFulfilled\n          | PromiseLike<TResultFulfilled>\n          | CancelablePromise<TResultFulfilled>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((\n          reason: any\n        ) =>\n          | TResultRejected\n          | PromiseLike<TResultRejected>\n          | CancelablePromise<TResultRejected>)\n      | undefined\n      | null\n  ): CancelablePromise<TResultFulfilled | TResultRejected>;\n  catch<TResult = never>(\n    onrejected?:\n      | ((\n          reason: any\n        ) => TResult | PromiseLike<TResult> | CancelablePromise<TResult>)\n      | undefined\n      | null\n  ): CancelablePromise<TValue | TResult>;\n  finally(\n    onfinally?: (() => void) | undefined | null\n  ): CancelablePromise<TValue>;\n  cancel(): void;\n  isCanceled(): boolean;\n};\n\nexport function createCancelablePromise<TValue>(\n  executor: PromiseExecutor<TValue>\n): CancelablePromise<TValue> {\n  return createInternalCancelablePromise(\n    new Promise<TValue>((resolve, reject) => {\n      return executor(resolve, reject);\n    }),\n    { isCanceled: false, onCancelList: [] }\n  );\n}\n\ncreateCancelablePromise.resolve = <TValue>(\n  value?: TValue | PromiseLike<TValue> | CancelablePromise<TValue>\n) => cancelable(Promise.resolve(value));\n\ncreateCancelablePromise.reject = (reason?: any) =>\n  cancelable(Promise.reject(reason));\n\nexport function cancelable<TValue>(promise: Promise<TValue>) {\n  return createInternalCancelablePromise(promise, {\n    isCanceled: false,\n    onCancelList: [],\n  });\n}\n\nfunction createCallback(\n  onResult: ((...args: any[]) => any) | null | undefined,\n  state: CancelablePromiseState,\n  fallback: any\n) {\n  if (!onResult) {\n    return fallback;\n  }\n\n  return function callback(arg?: any) {\n    if (state.isCanceled) {\n      return arg;\n    }\n\n    return onResult(arg);\n  };\n}\n","/**\n * Returns the next active item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultActiveItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultActiveItemId The default active index to fallback to\n */\nexport function getNextActiveItemId(\n  moveAmount: number,\n  baseIndex: number | null,\n  itemCount: number,\n  defaultActiveItemId: number | null\n): number | null {\n  if (!itemCount) {\n    return null;\n  }\n\n  if (\n    moveAmount < 0 &&\n    (baseIndex === null || (defaultActiveItemId !== null && baseIndex === 0))\n  ) {\n    return itemCount + moveAmount;\n  }\n\n  const numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n\n  if (numericIndex <= -1 || numericIndex >= itemCount) {\n    return defaultActiveItemId === null ? null : 0;\n  }\n\n  return numericIndex;\n}\n","import { AutocompleteCollection, AutocompleteState, BaseItem } from '../types';\n\n// We don't have access to the autocomplete source when we call `onKeyDown`\n// or `onClick` because those are native browser events.\n// However, we can get the source from the suggestion index.\nfunction getCollectionFromActiveItemId<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n): AutocompleteCollection<TItem> | undefined {\n  // Given 3 sources with respectively 1, 2 and 3 suggestions: [1, 2, 3]\n  // We want to get the accumulated counts:\n  // [1, 1 + 2, 1 + 2 + 3] = [1, 3, 3 + 3] = [1, 3, 6]\n  const accumulatedCollectionsCount = state.collections\n    .map((collections) => collections.items.length)\n    .reduce<number[]>((acc, collectionsCount, index) => {\n      const previousValue = acc[index - 1] || 0;\n      const nextValue = previousValue + collectionsCount;\n\n      acc.push(nextValue);\n\n      return acc;\n    }, []);\n\n  // Based on the accumulated counts, we can infer the index of the suggestion.\n  const collectionIndex = accumulatedCollectionsCount.reduce((acc, current) => {\n    if (current <= state.activeItemId!) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n\n  return state.collections[collectionIndex];\n}\n\n/**\n * Gets the highlighted index relative to a suggestion object (not the absolute\n * highlighted index).\n *\n * Example:\n *  [['a', 'b'], ['c', 'd', 'e'], ['f']]\n *                      ↑\n *         (absolute: 3, relative: 1)\n */\nfunction getRelativeActiveItemId<TItem extends BaseItem>({\n  state,\n  collection,\n}: {\n  state: AutocompleteState<TItem>;\n  collection: AutocompleteCollection<TItem>;\n}): number {\n  let isOffsetFound = false;\n  let counter = 0;\n  let previousItemsOffset = 0;\n\n  while (isOffsetFound === false) {\n    const currentCollection = state.collections[counter];\n\n    if (currentCollection === collection) {\n      isOffsetFound = true;\n      break;\n    }\n\n    previousItemsOffset += currentCollection.items.length;\n\n    counter++;\n  }\n\n  return state.activeItemId! - previousItemsOffset;\n}\n\nexport function getActiveItem<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n) {\n  const collection = getCollectionFromActiveItemId(state);\n\n  if (!collection) {\n    return null;\n  }\n\n  const item = collection.items[getRelativeActiveItemId({ state, collection })];\n  const source = collection.source;\n  const itemInputValue = source.getItemInputValue({ item, state });\n  const itemUrl = source.getItemUrl({ item, state });\n\n  return {\n    item,\n    itemInputValue,\n    itemUrl,\n    source,\n  };\n}\n","const regex = /((gt|sm)-|galaxy nexus)|samsung[- ]|samsungbrowser/i;\n\nexport function isSamsung(userAgent: string) {\n  return Boolean(userAgent && userAgent.match(regex));\n}\n","import {\n  getItemsCount,\n  generateAutocompleteId,\n  flatten,\n} from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteEnvironment,\n  AutocompleteOptions,\n  AutocompleteSubscribers,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getNormalizedSources } from './utils';\n\nexport function getDefaultProps<TItem extends BaseItem>(\n  props: AutocompleteOptions<TItem>,\n  pluginSubscribers: AutocompleteSubscribers<TItem>\n): InternalAutocompleteOptions<TItem> {\n  /* eslint-disable no-restricted-globals */\n  const environment: AutocompleteEnvironment = (\n    typeof window !== 'undefined' ? window : {}\n  ) as typeof window;\n  /* eslint-enable no-restricted-globals */\n  const plugins = props.plugins || [];\n\n  return {\n    debug: false,\n    openOnFocus: false,\n    placeholder: '',\n    autoFocus: false,\n    defaultActiveItemId: null,\n    stallThreshold: 300,\n    insights: false,\n    environment,\n    shouldPanelOpen: ({ state }) => getItemsCount(state) > 0,\n    reshape: ({ sources }) => sources,\n    ...props,\n    // Since `generateAutocompleteId` triggers a side effect (it increments\n    // an internal counter), we don't want to execute it if unnecessary.\n    id: props.id ?? generateAutocompleteId(),\n    plugins,\n    // The following props need to be deeply defaulted.\n    initialState: {\n      activeItemId: null,\n      query: '',\n      completion: null,\n      collections: [],\n      isOpen: false,\n      status: 'idle',\n      context: {},\n      ...props.initialState,\n    },\n    onStateChange(params) {\n      props.onStateChange?.(params);\n      plugins.forEach((x) => x.onStateChange?.(params));\n    },\n    onSubmit(params) {\n      props.onSubmit?.(params);\n      plugins.forEach((x) => x.onSubmit?.(params));\n    },\n    onReset(params) {\n      props.onReset?.(params);\n      plugins.forEach((x) => x.onReset?.(params));\n    },\n    getSources(params) {\n      return Promise.all(\n        [...plugins.map((plugin) => plugin.getSources), props.getSources]\n          .filter(Boolean)\n          .map((getSources) => getNormalizedSources(getSources!, params))\n      )\n        .then((nested) => flatten(nested))\n        .then((sources) =>\n          sources.map((source) => ({\n            ...source,\n            onSelect(params) {\n              source.onSelect(params);\n              pluginSubscribers.forEach((x) => x.onSelect?.(params));\n            },\n            onActive(params) {\n              source.onActive(params);\n              pluginSubscribers.forEach((x) => x.onActive?.(params));\n            },\n            onResolve(params) {\n              source.onResolve(params);\n              pluginSubscribers.forEach((x) => x.onResolve?.(params));\n            },\n          }))\n        );\n    },\n    navigator: {\n      navigate({ itemUrl }) {\n        environment.location.assign(itemUrl);\n      },\n      navigateNewTab({ itemUrl }) {\n        const windowReference = environment.open(itemUrl, '_blank', 'noopener');\n        windowReference?.focus();\n      },\n      navigateNewWindow({ itemUrl }) {\n        environment.open(itemUrl, '_blank', 'noopener');\n      },\n      ...props.navigator,\n    },\n  };\n}\n","import { invariant, decycle, noop } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteSource,\n  BaseItem,\n  GetSources,\n  GetSourcesParams,\n  InternalAutocompleteSource,\n  InternalGetSources,\n} from '../types';\n\nexport function getNormalizedSources<TItem extends BaseItem>(\n  getSources: GetSources<TItem>,\n  params: GetSourcesParams<TItem>\n): ReturnType<InternalGetSources<TItem>> {\n  const seenSourceIds: string[] = [];\n\n  return Promise.resolve(getSources(params)).then((sources) => {\n    invariant(\n      Array.isArray(sources),\n      () =>\n        `The \\`getSources\\` function must return an array of sources but returned type ${JSON.stringify(\n          typeof sources\n        )}:\\n\\n${JSON.stringify(decycle(sources), null, 2)}`\n    );\n\n    return Promise.all(\n      sources\n        // We allow `undefined` and `false` sources to allow users to use\n        // `Boolean(query) && source` (=> `false`).\n        // We need to remove these values at this point.\n        .filter((maybeSource: any): maybeSource is AutocompleteSource<TItem> =>\n          Boolean(maybeSource)\n        )\n        .map((source) => {\n          invariant(\n            typeof source.sourceId === 'string',\n            'A source must provide a `sourceId` string.'\n          );\n\n          if (seenSourceIds.includes(source.sourceId)) {\n            throw new Error(\n              `[Autocomplete] The \\`sourceId\\` ${JSON.stringify(\n                source.sourceId\n              )} is not unique.`\n            );\n          }\n\n          seenSourceIds.push(source.sourceId);\n\n          const defaultSource: Omit<\n            InternalAutocompleteSource<TItem>,\n            'sourceId' | 'getItems'\n          > = {\n            getItemInputValue({ state }) {\n              return state.query;\n            },\n            getItemUrl() {\n              return undefined;\n            },\n            onSelect({ setIsOpen }) {\n              setIsOpen(false);\n            },\n            onActive: noop,\n            onResolve: noop,\n          };\n\n          Object.keys(defaultSource).forEach((key) => {\n            defaultSource[key].__default = true;\n          });\n\n          const normalizedSource: InternalAutocompleteSource<TItem> = {\n            ...defaultSource,\n            ...source,\n          };\n\n          return Promise.resolve(normalizedSource);\n        })\n    );\n  });\n}\n","import type {\n  Execute,\n  ExecuteResponse,\n  RequesterDescription,\n  TransformResponse,\n} from '@algolia/autocomplete-preset-algolia';\nimport { decycle, flatten, invariant } from '@algolia/autocomplete-shared';\nimport {\n  MultipleQueriesQuery,\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\nimport type { SearchClient } from 'algoliasearch/lite';\n\nimport {\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteSource,\n  OnResolveParams,\n} from './types';\nimport { mapToAlgoliaResponse } from './utils';\n\nfunction isDescription<TItem extends BaseItem>(\n  item:\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n    | PackedDescription<TItem>\n): item is RequestDescriptionPreResolved<TItem> {\n  return Boolean((item as RequestDescriptionPreResolved<TItem>).execute);\n}\n\nfunction isRequesterDescription<TItem extends BaseItem>(\n  description: TItem[] | TItem[][] | RequesterDescription<TItem>\n): description is RequesterDescription<TItem> {\n  return Boolean((description as RequesterDescription<TItem>)?.execute);\n}\n\ntype PackedDescription<TItem extends BaseItem> = {\n  searchClient: SearchClient;\n  execute: Execute<TItem>;\n  requesterId?: string;\n  items: RequestDescriptionPreResolved<TItem>['requests'];\n};\n\ntype RequestDescriptionPreResolved<TItem extends BaseItem> = Pick<\n  RequesterDescription<TItem>,\n  'execute' | 'requesterId' | 'searchClient' | 'transformResponse'\n> & {\n  requests: Array<{\n    query: MultipleQueriesQuery;\n    sourceId: string;\n    transformResponse: TransformResponse<TItem>;\n  }>;\n};\n\ntype RequestDescriptionPreResolvedCustom<TItem extends BaseItem> = {\n  items: TItem[] | TItem[][];\n  sourceId: string;\n  transformResponse?: undefined;\n};\n\nexport function preResolve<TItem extends BaseItem>(\n  itemsOrDescription: TItem[] | TItem[][] | RequesterDescription<TItem>,\n  sourceId: string,\n  state: AutocompleteState<TItem>\n):\n  | RequestDescriptionPreResolved<TItem>\n  | RequestDescriptionPreResolvedCustom<TItem> {\n  if (isRequesterDescription<TItem>(itemsOrDescription)) {\n    const contextParameters =\n      itemsOrDescription.requesterId === 'algolia'\n        ? Object.assign(\n            {},\n            ...Object.keys(state.context).map((key) => {\n              return (state.context[key] as Record<string, unknown>)\n                ?.__algoliaSearchParameters;\n            })\n          )\n        : {};\n\n    return {\n      ...itemsOrDescription,\n      requests: itemsOrDescription.queries.map((query) => ({\n        query:\n          itemsOrDescription.requesterId === 'algolia'\n            ? {\n                ...query,\n                params: {\n                  ...contextParameters,\n                  ...query.params,\n                },\n              }\n            : query,\n        sourceId,\n        transformResponse: itemsOrDescription.transformResponse,\n      })),\n    };\n  }\n\n  return {\n    items: itemsOrDescription,\n    sourceId,\n  };\n}\n\nexport function resolve<TItem extends BaseItem>(\n  items: Array<\n    | RequestDescriptionPreResolved<TItem>\n    | RequestDescriptionPreResolvedCustom<TItem>\n  >\n) {\n  const packed = items.reduce<\n    Array<RequestDescriptionPreResolvedCustom<TItem> | PackedDescription<TItem>>\n  >((acc, current) => {\n    if (!isDescription(current)) {\n      acc.push(current);\n      return acc;\n    }\n\n    const { searchClient, execute, requesterId, requests } = current;\n\n    const container = acc.find<PackedDescription<TItem>>(\n      (item): item is PackedDescription<TItem> => {\n        return (\n          isDescription(current) &&\n          isDescription(item) &&\n          item.searchClient === searchClient &&\n          Boolean(requesterId) &&\n          item.requesterId === requesterId\n        );\n      }\n    );\n\n    if (container) {\n      container.items.push(...requests);\n    } else {\n      const request: PackedDescription<TItem> = {\n        execute,\n        requesterId,\n        items: requests,\n        searchClient,\n      };\n      acc.push(request);\n    }\n\n    return acc;\n  }, []);\n\n  const values = packed.map<\n    | Promise<RequestDescriptionPreResolvedCustom<TItem>>\n    | ReturnType<Execute<TItem>>\n  >((maybeDescription) => {\n    if (!isDescription<TItem>(maybeDescription)) {\n      return Promise.resolve(\n        maybeDescription as RequestDescriptionPreResolvedCustom<TItem>\n      );\n    }\n\n    const { execute, items, searchClient } =\n      maybeDescription as PackedDescription<TItem>;\n\n    return execute({\n      searchClient,\n      requests: items,\n    });\n  });\n\n  return Promise.all<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>\n  >(values).then((responses) =>\n    flatten<\n      RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n    >(responses)\n  );\n}\n\nexport function postResolve<TItem extends BaseItem>(\n  responses: Array<\n    RequestDescriptionPreResolvedCustom<TItem> | ExecuteResponse<TItem>[0]\n  >,\n  sources: Array<InternalAutocompleteSource<TItem>>,\n  store: AutocompleteStore<TItem>\n) {\n  return sources.map((source) => {\n    const matches = responses.filter(\n      (response) => response.sourceId === source.sourceId\n    );\n    const results = matches.map(({ items }) => items);\n    const transform = matches[0].transformResponse;\n    const items = transform\n      ? transform(\n          mapToAlgoliaResponse(\n            results as Array<\n              SearchForFacetValuesResponse | SearchResponse<TItem>\n            >\n          )\n        )\n      : results;\n\n    source.onResolve({\n      source,\n      results,\n      items,\n      state: store.getState(),\n    } as OnResolveParams<TItem>);\n\n    invariant(\n      Array.isArray(items),\n      () => `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned type ${JSON.stringify(\n        typeof items\n      )}:\\n\\n${JSON.stringify(decycle(items), null, 2)}.\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    invariant(\n      (items as Array<typeof items>).every(Boolean),\n      `The \\`getItems\\` function from source \"${\n        source.sourceId\n      }\" must return an array of items but returned ${JSON.stringify(\n        undefined\n      )}.\n\nDid you forget to return items?\n\nSee: https://www.algolia.com/doc/ui-libraries/autocomplete/core-concepts/sources/#param-getitems`\n    );\n\n    return {\n      source,\n      items,\n    };\n  });\n}\n","import type {\n  SearchForFacetValuesResponse,\n  SearchResponse,\n} from '@algolia/client-search';\n\nexport function mapToAlgoliaResponse<THit>(\n  rawResults: Array<SearchResponse<THit> | SearchForFacetValuesResponse>\n) {\n  return {\n    results: rawResults,\n    hits: rawResults\n      .map((result) => (result as SearchResponse<THit>).hits)\n      .filter(Boolean),\n    facetHits: rawResults\n      .map((result) =>\n        (result as SearchForFacetValuesResponse).facetHits?.map((facetHit) => {\n          // Bring support for the highlighting components.\n          return {\n            label: facetHit.value,\n            count: facetHit.count,\n            _highlightResult: {\n              label: {\n                value: facetHit.highlighted,\n              },\n            },\n          };\n        })\n      )\n      .filter(Boolean),\n  };\n}\n","import { MaybePromise } from '@algolia/autocomplete-shared';\n\n/**\n * Creates a runner that executes promises in a concurrent-safe way.\n *\n * This is useful to prevent older promises to resolve after a newer promise,\n * otherwise resulting in stale resolved values.\n */\nexport function createConcurrentSafePromise() {\n  let basePromiseId = -1;\n  let latestResolvedId = -1;\n  let latestResolvedValue: unknown = undefined;\n\n  return function runConcurrentSafePromise<TValue>(\n    promise: MaybePromise<TValue>\n  ) {\n    basePromiseId++;\n    const currentPromiseId = basePromiseId;\n\n    return Promise.resolve(promise).then((x) => {\n      // The promise might take too long to resolve and get outdated. This would\n      // result in resolving stale values.\n      // When this happens, we ignore the promise value and return the one\n      // coming from the latest resolved value.\n      //\n      // +----------------------------------+\n      // |        100ms                     |\n      // | run(1) +--->  R1                 |\n      // |        300ms                     |\n      // | run(2) +-------------> R2 (SKIP) |\n      // |        200ms                     |\n      // | run(3) +--------> R3             |\n      // +----------------------------------+\n      if (latestResolvedValue && currentPromiseId < latestResolvedId) {\n        return latestResolvedValue as TValue;\n      }\n\n      latestResolvedId = currentPromiseId;\n      latestResolvedValue = x;\n\n      return x;\n    });\n  };\n}\n","import { reshape } from './reshape';\nimport { preResolve, resolve, postResolve } from './resolve';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport {\n  cancelable,\n  CancelablePromise,\n  createConcurrentSafePromise,\n  getActiveItem,\n} from './utils';\n\nlet lastStalledId: number | null = null;\n\ninterface OnInputParams<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: any;\n  /**\n   * The next partial state to apply after the function is called.\n   *\n   * This is useful when we call `onInput` in a different scenario than an\n   * actual input. For example, we use `onInput` when we click on an item,\n   * but we want to close the panel in that case.\n   */\n  nextState?: Partial<AutocompleteState<TItem>>;\n  props: InternalAutocompleteOptions<TItem>;\n  query: string;\n  store: AutocompleteStore<TItem>;\n}\n\nconst runConcurrentSafePromise = createConcurrentSafePromise();\n\nexport function onInput<TItem extends BaseItem>({\n  event,\n  nextState = {},\n  props,\n  query,\n  refresh,\n  store,\n  ...setters\n}: OnInputParams<TItem>): CancelablePromise<void> {\n  if (lastStalledId) {\n    props.environment.clearTimeout(lastStalledId);\n  }\n\n  const { setCollections, setIsOpen, setQuery, setActiveItemId, setStatus } =\n    setters;\n\n  setQuery(query);\n  setActiveItemId(props.defaultActiveItemId);\n\n  if (!query && props.openOnFocus === false) {\n    const collections = store.getState().collections.map((collection) => ({\n      ...collection,\n      items: [],\n    }));\n\n    setStatus('idle');\n    setCollections(collections);\n    setIsOpen(\n      nextState.isOpen ?? props.shouldPanelOpen({ state: store.getState() })\n    );\n\n    // We make sure to update the latest resolved value of the tracked\n    // promises to keep late resolving promises from \"cancelling\" the state\n    // updates performed in this code path.\n    // We chain with a void promise to respect `onInput`'s expected return type.\n    const request = cancelable(\n      runConcurrentSafePromise(collections).then(() => Promise.resolve())\n    );\n\n    return store.pendingRequests.add(request);\n  }\n\n  setStatus('loading');\n\n  lastStalledId = props.environment.setTimeout(() => {\n    setStatus('stalled');\n  }, props.stallThreshold);\n\n  // We track the entire promise chain triggered by `onInput` before mutating\n  // the Autocomplete state to make sure that any state manipulation is based on\n  // fresh data regardless of when promises individually resolve.\n  // We don't track nested promises and only rely on the full chain resolution,\n  // meaning we should only ever manipulate the state once this concurrent-safe\n  // promise is resolved.\n  const request = cancelable(\n    runConcurrentSafePromise(\n      props\n        .getSources({\n          query,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        })\n        .then((sources) => {\n          return Promise.all(\n            sources.map((source) => {\n              return Promise.resolve(\n                source.getItems({\n                  query,\n                  refresh,\n                  state: store.getState(),\n                  ...setters,\n                })\n              ).then((itemsOrDescription) =>\n                preResolve<TItem>(\n                  itemsOrDescription,\n                  source.sourceId,\n                  store.getState()\n                )\n              );\n            })\n          )\n            .then(resolve)\n            .then((responses) => postResolve(responses, sources, store))\n            .then((collections) =>\n              reshape({ collections, props, state: store.getState() })\n            );\n        })\n    )\n  )\n    .then((collections) => {\n      // Parameters passed to `onInput` could be stale when the following code\n      // executes, because `onInput` calls may not resolve in order.\n      // If it becomes a problem we'll need to save the last passed parameters.\n      // See: https://codesandbox.io/s/agitated-cookies-y290z\n\n      setStatus('idle');\n\n      setCollections(collections as any);\n\n      const isPanelOpen = props.shouldPanelOpen({ state: store.getState() });\n\n      setIsOpen(\n        nextState.isOpen ??\n          ((props.openOnFocus && !query && isPanelOpen) || isPanelOpen)\n      );\n\n      const highlightedItem = getActiveItem(store.getState());\n\n      if (store.getState().activeItemId !== null && highlightedItem) {\n        const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n        source.onActive({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      }\n    })\n    .finally(() => {\n      setStatus('idle');\n\n      if (lastStalledId) {\n        props.environment.clearTimeout(lastStalledId);\n      }\n    });\n\n  return store.pendingRequests.add(request);\n}\n","import { flatten } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteCollection,\n  AutocompleteReshapeSourcesBySourceId,\n  AutocompleteState,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\n\ntype ReshapeParams<TItem extends BaseItem> = {\n  collections: Array<AutocompleteCollection<any>>;\n  props: InternalAutocompleteOptions<TItem>;\n  state: AutocompleteState<TItem>;\n};\n\nexport function reshape<TItem extends BaseItem>({\n  collections,\n  props,\n  state,\n}: ReshapeParams<TItem>) {\n  // Sources are grouped by `sourceId` to conveniently pick them via destructuring.\n  // Example: `const { recentSearchesPlugin } = sourcesBySourceId`\n  const originalSourcesBySourceId = collections.reduce<\n    AutocompleteReshapeSourcesBySourceId<TItem>\n  >(\n    (acc, collection) => ({\n      ...acc,\n      [collection.source.sourceId]: {\n        ...collection.source,\n        getItems() {\n          // We provide the resolved items from the collection to the `reshape` prop.\n          return flatten<any>(collection.items);\n        },\n      },\n    }),\n    {}\n  );\n\n  const { sourcesBySourceId } = props.plugins.reduce(\n    (acc, plugin) => {\n      if (plugin.reshape) {\n        return plugin.reshape(acc);\n      }\n      return acc;\n    },\n    {\n      sourcesBySourceId: originalSourcesBySourceId,\n      state,\n    }\n  );\n\n  const reshapeSources = props.reshape({\n    sourcesBySourceId,\n    sources: Object.values(sourcesBySourceId),\n    state,\n  });\n\n  // We reconstruct the collections with the items modified by the `reshape` prop.\n  return flatten(reshapeSources)\n    .filter(Boolean)\n    .map((source) => {\n      return {\n        source,\n        items: source.getItems(),\n      };\n    });\n}\n","import { noop } from '@algolia/autocomplete-shared';\n\nimport { onInput } from './onInput';\nimport { onKeyDown } from './onKeyDown';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  GetEnvironmentProps,\n  GetFormProps,\n  GetInputProps,\n  GetItemProps,\n  GetLabelProps,\n  GetListProps,\n  GetPanelProps,\n  GetRootProps,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem, isOrContainsNode, isSamsung } from './utils';\n\ninterface GetPropGettersOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  store: AutocompleteStore<TItem>;\n  props: InternalAutocompleteOptions<TItem>;\n}\n\nexport function getPropGetters<\n  TItem extends BaseItem,\n  TEvent,\n  TMouseEvent,\n  TKeyboardEvent\n>({ props, refresh, store, ...setters }: GetPropGettersOptions<TItem>) {\n  const getEnvironmentProps: GetEnvironmentProps = (providedProps) => {\n    const { inputElement, formElement, panelElement, ...rest } = providedProps;\n\n    function onMouseDownOrTouchStart(event: MouseEvent | TouchEvent) {\n      // The `onTouchStart`/`onMouseDown` events shouldn't trigger the `blur`\n      // handler when it's not an interaction with Autocomplete.\n      // We detect it with the following heuristics:\n      // - the panel is closed AND there are no pending requests\n      //   (no interaction with the autocomplete, no future state updates)\n      // - OR the touched target is the input element (should open the panel)\n      const isAutocompleteInteraction =\n        store.getState().isOpen || !store.pendingRequests.isEmpty();\n\n      if (!isAutocompleteInteraction || event.target === inputElement) {\n        return;\n      }\n\n      // @TODO: support cases where there are multiple Autocomplete instances.\n      // Right now, a second instance makes this computation return false.\n      const isTargetWithinAutocomplete = [formElement, panelElement].some(\n        (contextNode) => {\n          return isOrContainsNode(contextNode, event.target as Node);\n        }\n      );\n\n      if (isTargetWithinAutocomplete === false) {\n        store.dispatch('blur', null);\n\n        // If requests are still pending when the user closes the panel, they\n        // could reopen the panel once they resolve.\n        // We want to prevent any subsequent query from reopening the panel\n        // because it would result in an unsolicited UI behavior.\n        if (!props.debug) {\n          store.pendingRequests.cancelAll();\n        }\n      }\n    }\n\n    return {\n      // We do not rely on the native `blur` event of the input to close the\n      // panel, but rather on a custom `touchstart`/`mousedown` event outside\n      // of the autocomplete elements.\n      // This ensures we don't mistakenly interpret interactions within the\n      // autocomplete (but outside of the input) as a signal to close the panel.\n      // For example, clicking reset button causes an input blur, but if\n      // `openOnFocus=true`, it shouldn't close the panel.\n      // On touch devices, scrolling results (`touchmove`) causes an input blur\n      // but shouldn't close the panel.\n      onTouchStart: onMouseDownOrTouchStart,\n      onMouseDown: onMouseDownOrTouchStart,\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove(event: TouchEvent) {\n        if (\n          store.getState().isOpen === false ||\n          inputElement !== props.environment.document.activeElement ||\n          event.target === inputElement\n        ) {\n          return;\n        }\n\n        inputElement.blur();\n      },\n      ...rest,\n    };\n  };\n\n  const getRootProps: GetRootProps = (rest) => {\n    return {\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getFormProps: GetFormProps<TEvent> = (providedProps) => {\n    const { inputElement, ...rest } = providedProps;\n\n    return {\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: (event) => {\n        (event as unknown as Event).preventDefault();\n\n        props.onSubmit({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('submit', null);\n        providedProps.inputElement?.blur();\n      },\n      onReset: (event) => {\n        (event as unknown as Event).preventDefault();\n\n        props.onReset({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('reset', null);\n        providedProps.inputElement?.focus();\n      },\n      ...rest,\n    };\n  };\n\n  const getInputProps: GetInputProps<TEvent, TMouseEvent, TKeyboardEvent> = (\n    providedProps\n  ) => {\n    function onFocus(event: TEvent) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || Boolean(store.getState().query)) {\n        onInput({\n          event,\n          props,\n          query: store.getState().completion || store.getState().query,\n          refresh,\n          store,\n          ...setters,\n        });\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    const { inputElement, maxLength = 512, ...rest } = providedProps || {};\n    const activeItem = getActiveItem(store.getState());\n\n    const userAgent = props.environment.navigator?.userAgent || '';\n    const shouldFallbackKeyHint = isSamsung(userAgent);\n    const enterKeyHint =\n      activeItem?.itemUrl && !shouldFallbackKeyHint ? 'go' : 'search';\n\n    return {\n      'aria-autocomplete': 'both',\n      'aria-activedescendant':\n        store.getState().isOpen && store.getState().activeItemId !== null\n          ? `${props.id}-item-${store.getState().activeItemId}`\n          : undefined,\n      'aria-controls': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      value: store.getState().completion || store.getState().query,\n      id: `${props.id}-input`,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint,\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength,\n      type: 'search',\n      onChange: (event) => {\n        onInput({\n          event,\n          props,\n          query: (\n            (event as unknown as Event).currentTarget as HTMLInputElement\n          ).value.slice(0, maxLength),\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onKeyDown: (event) => {\n        onKeyDown({\n          event: event as unknown as KeyboardEvent,\n          props,\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onFocus,\n      // We don't rely on the `blur` event.\n      // See explanation in `onTouchStart`/`onMouseDown`.\n      // @MAJOR See if we need to keep this handler.\n      onBlur: noop,\n      onClick: (event) => {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (\n          providedProps.inputElement ===\n            props.environment.document.activeElement &&\n          !store.getState().isOpen\n        ) {\n          onFocus(event as unknown as TEvent);\n        }\n      },\n      ...rest,\n    };\n  };\n\n  const getAutocompleteId = (instanceId: string, sourceId?: number) => {\n    return typeof sourceId !== 'undefined'\n      ? `${instanceId}-${sourceId}`\n      : instanceId;\n  };\n\n  const getLabelProps: GetLabelProps = (providedProps) => {\n    const { sourceIndex, ...rest } = providedProps || {};\n\n    return {\n      htmlFor: `${getAutocompleteId(props.id, sourceIndex)}-input`,\n      id: `${getAutocompleteId(props.id, sourceIndex)}-label`,\n      ...rest,\n    };\n  };\n\n  const getListProps: GetListProps = (providedProps) => {\n    const { sourceIndex, ...rest } = providedProps || {};\n\n    return {\n      role: 'listbox',\n      'aria-labelledby': `${getAutocompleteId(props.id, sourceIndex)}-label`,\n      id: `${getAutocompleteId(props.id, sourceIndex)}-list`,\n      ...rest,\n    };\n  };\n\n  const getPanelProps: GetPanelProps<TMouseEvent> = (rest) => {\n    return {\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        (event as unknown as MouseEvent).preventDefault();\n      },\n      onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      },\n      ...rest,\n    };\n  };\n\n  const getItemProps: GetItemProps<any, TMouseEvent> = (providedProps) => {\n    const { item, source, sourceIndex, ...rest } = providedProps;\n\n    return {\n      id: `${getAutocompleteId(props.id, sourceIndex as number)}-item-${\n        item.__autocomplete_id\n      }`,\n      role: 'option',\n      'aria-selected': store.getState().activeItemId === item.__autocomplete_id,\n      onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().activeItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n\n        const activeItem = getActiveItem(store.getState());\n\n        if (store.getState().activeItemId !== null && activeItem) {\n          const { item, itemInputValue, itemUrl, source } = activeItem;\n\n          source.onActive({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        }\n      },\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        (event as unknown as MouseEvent).preventDefault();\n      },\n      onClick(event) {\n        const itemInputValue = source.getItemInputValue({\n          item,\n          state: store.getState(),\n        });\n        const itemUrl = source.getItemUrl({\n          item,\n          state: store.getState(),\n        });\n\n        // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `activeItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n        const runPreCommand = itemUrl\n          ? Promise.resolve()\n          : onInput({\n              event,\n              nextState: { isOpen: false },\n              props,\n              query: itemInputValue,\n              refresh,\n              store,\n              ...setters,\n            });\n\n        runPreCommand.then(() => {\n          source.onSelect({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        });\n      },\n      ...rest,\n    };\n  };\n\n  return {\n    getEnvironmentProps,\n    getRootProps,\n    getFormProps,\n    getLabelProps,\n    getInputProps,\n    getPanelProps,\n    getListProps,\n    getItemProps,\n  };\n}\n","export function isOrContainsNode(parent: Node, child: Node) {\n  return parent === child || parent.contains(child);\n}\n","import { onInput } from './onInput';\nimport {\n  ActionType,\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getActiveItem } from './utils';\n\ninterface OnKeyDownOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: KeyboardEvent;\n  props: InternalAutocompleteOptions<TItem>;\n  store: AutocompleteStore<TItem>;\n}\n\nexport function onKeyDown<TItem extends BaseItem>({\n  event,\n  props,\n  refresh,\n  store,\n  ...setters\n}: OnKeyDownOptions<TItem>): void {\n  if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n    // eslint-disable-next-line no-inner-declarations\n    function triggerScrollIntoView() {\n      const nodeItem = props.environment.document.getElementById(\n        `${props.id}-item-${store.getState().activeItemId}`\n      );\n\n      if (nodeItem) {\n        if ((nodeItem as any).scrollIntoViewIfNeeded) {\n          (nodeItem as any).scrollIntoViewIfNeeded(false);\n        } else {\n          nodeItem.scrollIntoView(false);\n        }\n      }\n    }\n\n    // eslint-disable-next-line no-inner-declarations\n    function triggerOnActive() {\n      const highlightedItem = getActiveItem(store.getState());\n\n      if (store.getState().activeItemId !== null && highlightedItem) {\n        const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n        source.onActive({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      }\n    }\n\n    // Default browser behavior changes the caret placement on ArrowUp and\n    // ArrowDown.\n    event.preventDefault();\n\n    // When re-opening the panel, we need to split the logic to keep the actions\n    // synchronized as `onInput` returns a promise.\n    if (\n      store.getState().isOpen === false &&\n      (props.openOnFocus || Boolean(store.getState().query))\n    ) {\n      onInput({\n        event,\n        props,\n        query: store.getState().query,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        store.dispatch(event.key as ActionType, {\n          nextActiveItemId: props.defaultActiveItemId,\n        });\n\n        triggerOnActive();\n        // Since we rely on the DOM, we need to wait for all the micro tasks to\n        // finish (which include re-opening the panel) to make sure all the\n        // elements are available.\n        setTimeout(triggerScrollIntoView, 0);\n      });\n    } else {\n      store.dispatch(event.key, {});\n\n      triggerOnActive();\n      triggerScrollIntoView();\n    }\n  } else if (event.key === 'Escape') {\n    // This prevents the default browser behavior on `input[type=\"search\"]`\n    // from removing the query right away because we first want to close the\n    // panel.\n    event.preventDefault();\n\n    store.dispatch(event.key, null);\n\n    // Hitting the `Escape` key signals the end of a user interaction with the\n    // autocomplete. At this point, we should ignore any requests that are still\n    // pending and could reopen the panel once they resolve, because that would\n    // result in an unsolicited UI behavior.\n    store.pendingRequests.cancelAll();\n  } else if (event.key === 'Tab') {\n    store.dispatch('blur', null);\n\n    // Hitting the `Escape` key signals the end of a user interaction with the\n    // autocomplete. At this point, we should ignore any requests that are still\n    // pending and could reopen the panel once they resolve, because that would\n    // result in an unsolicited UI behavior.\n    store.pendingRequests.cancelAll();\n  } else if (event.key === 'Enter') {\n    // No active item, so we let the browser handle the native `onSubmit` form\n    // event.\n    if (\n      store.getState().activeItemId === null ||\n      store\n        .getState()\n        .collections.every((collection) => collection.items.length === 0)\n    ) {\n      // If requests are still pending when the panel closes, they could reopen\n      // the panel once they resolve.\n      // We want to prevent any subsequent query from reopening the panel\n      // because it would result in an unsolicited UI behavior.\n      if (!props.debug) {\n        store.pendingRequests.cancelAll();\n      }\n\n      return;\n    }\n\n    // This prevents the `onSubmit` event to be sent because an item is\n    // highlighted.\n    event.preventDefault();\n\n    const { item, itemInputValue, itemUrl, source } = getActiveItem(\n      store.getState()\n    )!;\n\n    if (event.metaKey || event.ctrlKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewTab({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.shiftKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewWindow({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.altKey) {\n      // Keep native browser behavior\n    } else {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigate({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n\n        return;\n      }\n\n      onInput({\n        event,\n        nextState: { isOpen: false },\n        props,\n        query: itemInputValue,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      });\n    }\n  }\n}\n","import { UserAgent, userAgents } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteEnvironment,\n  AutocompleteOptions,\n  AutocompleteOptionsWithMetadata,\n  AutocompletePlugin,\n  BaseItem,\n} from '.';\n\ntype AutocompleteMetadata = {\n  plugins: Array<{\n    name: string | undefined;\n    options: string[];\n  }>;\n  options: Record<string, string[]>;\n  ua: UserAgent[];\n};\n\ntype GetMetadataParams<TItem extends BaseItem, TData = unknown> = {\n  plugins: Array<AutocompletePlugin<TItem, TData>>;\n  options: AutocompleteOptionsWithMetadata<TItem>;\n};\n\nexport function getMetadata<TItem extends BaseItem, TData = unknown>({\n  plugins,\n  options,\n}: GetMetadataParams<TItem, TData>) {\n  const optionsKey = ((options.__autocomplete_metadata\n    ?.userAgents as UserAgent[]) || [])[0]?.segment;\n\n  const extraOptions = optionsKey\n    ? {\n        [optionsKey]: Object.keys(\n          (options.__autocomplete_metadata\n            ?.options as AutocompleteOptions<TItem>) || {}\n        ),\n      }\n    : {};\n\n  return {\n    plugins: plugins.map((plugin) => ({\n      name: plugin.name,\n      options: Object.keys(plugin.__autocomplete_pluginOptions || []),\n    })),\n    options: {\n      'autocomplete-core': Object.keys(options),\n      ...extraOptions,\n    },\n    ua: userAgents.concat(\n      (options.__autocomplete_metadata?.userAgents as any) || []\n    ),\n  };\n}\n\ntype InlineMetadataParams = {\n  metadata: AutocompleteMetadata;\n  environment: AutocompleteEnvironment;\n};\n\nexport function injectMetadata({\n  metadata,\n  environment,\n}: InlineMetadataParams) {\n  const isMetadataEnabled =\n    environment.navigator?.userAgent?.includes('Algolia Crawler');\n\n  if (isMetadataEnabled) {\n    const metadataContainer = environment.document.createElement('meta');\n    const headRef = environment.document.querySelector('head');\n\n    metadataContainer.name = 'algolia:metadata';\n\n    setTimeout(() => {\n      metadataContainer.content = JSON.stringify(metadata);\n      headRef!.appendChild(metadataContainer);\n    }, 0);\n  }\n}\n","import { AutocompleteState, BaseItem } from './types';\nimport { getActiveItem } from './utils';\n\ninterface GetCompletionProps<TItem extends BaseItem> {\n  state: AutocompleteState<TItem>;\n}\n\nexport function getCompletion<TItem extends BaseItem>({\n  state,\n}: GetCompletionProps<TItem>): string | null {\n  if (state.isOpen === false || state.activeItemId === null) {\n    return null;\n  }\n\n  return getActiveItem(state)?.itemInputValue || null;\n}\n","import { getItemsCount, invariant } from '@algolia/autocomplete-shared';\n\nimport { getCompletion } from './getCompletion';\nimport { Reducer } from './types';\nimport { getNextActiveItemId } from './utils';\n\nexport const stateReducer: Reducer = (state, action) => {\n  switch (action.type) {\n    case 'setActiveItemId': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'setQuery': {\n      return {\n        ...state,\n        query: action.payload,\n        completion: null,\n      };\n    }\n\n    case 'setCollections': {\n      return {\n        ...state,\n        collections: action.payload,\n      };\n    }\n\n    case 'setIsOpen': {\n      return {\n        ...state,\n        isOpen: action.payload,\n      };\n    }\n\n    case 'setStatus': {\n      return {\n        ...state,\n        status: action.payload,\n      };\n    }\n\n    case 'setContext': {\n      return {\n        ...state,\n        context: {\n          ...state.context,\n          ...action.payload,\n        },\n      };\n    }\n\n    case 'ArrowDown': {\n      const nextState = {\n        ...state,\n        activeItemId: action.payload.hasOwnProperty('nextActiveItemId')\n          ? action.payload.nextActiveItemId\n          : getNextActiveItemId(\n              1,\n              state.activeItemId,\n              getItemsCount(state),\n              action.props.defaultActiveItemId\n            ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'ArrowUp': {\n      const nextState = {\n        ...state,\n        activeItemId: getNextActiveItemId(\n          -1,\n          state.activeItemId,\n          getItemsCount(state),\n          action.props.defaultActiveItemId\n        ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'Escape': {\n      if (state.isOpen) {\n        return {\n          ...state,\n          activeItemId: null,\n          isOpen: false,\n          completion: null,\n        };\n      }\n\n      return {\n        ...state,\n        activeItemId: null,\n        query: '',\n        status: 'idle',\n        collections: [],\n      };\n    }\n\n    case 'submit': {\n      return {\n        ...state,\n        activeItemId: null,\n        isOpen: false,\n        status: 'idle',\n      };\n    }\n\n    case 'reset': {\n      return {\n        ...state,\n        activeItemId:\n          // Since we open the panel on reset when openOnFocus=true\n          // we need to restore the highlighted index to the defaultActiveItemId. (DocSearch use-case)\n\n          // Since we close the panel when openOnFocus=false\n          // we lose track of the highlighted index. (Query-suggestions use-case)\n          action.props.openOnFocus === true\n            ? action.props.defaultActiveItemId\n            : null,\n        status: 'idle',\n        query: '',\n      };\n    }\n\n    case 'focus': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n        isOpen:\n          (action.props.openOnFocus || Boolean(state.query)) &&\n          action.props.shouldPanelOpen({ state }),\n      };\n    }\n\n    case 'blur': {\n      if (action.props.debug) {\n        return state;\n      }\n\n      return {\n        ...state,\n        isOpen: false,\n        activeItemId: null,\n      };\n    }\n\n    case 'mousemove': {\n      return {\n        ...state,\n        activeItemId: action.payload,\n      };\n    }\n\n    case 'mouseleave': {\n      return {\n        ...state,\n        activeItemId: action.props.defaultActiveItemId,\n      };\n    }\n\n    default:\n      invariant(\n        false,\n        `The reducer action ${JSON.stringify(action.type)} is not supported.`\n      );\n\n      return state;\n  }\n};\n","import { createAlgoliaInsightsPlugin } from '@algolia/autocomplete-plugin-algolia-insights';\n\nimport { checkOptions } from './checkOptions';\nimport { createStore } from './createStore';\nimport { getAutocompleteSetters } from './getAutocompleteSetters';\nimport { getDefaultProps } from './getDefaultProps';\nimport { getPropGetters } from './getPropGetters';\nimport { getMetadata, injectMetadata } from './metadata';\nimport { onInput } from './onInput';\nimport { stateReducer } from './stateReducer';\nimport {\n  AutocompleteApi,\n  AutocompleteOptions as AutocompleteCoreOptions,\n  BaseItem,\n  AutocompleteSubscribers,\n} from './types';\n\nexport interface AutocompleteOptionsWithMetadata<TItem extends BaseItem>\n  extends AutocompleteCoreOptions<TItem> {\n  /**\n   * @internal\n   */\n  __autocomplete_metadata?: Record<string, unknown>;\n}\n\nexport function createAutocomplete<\n  TItem extends BaseItem,\n  TEvent = Event,\n  TMouseEvent = MouseEvent,\n  TKeyboardEvent = KeyboardEvent\n>(\n  options: AutocompleteOptionsWithMetadata<TItem>\n): AutocompleteApi<TItem, TEvent, TMouseEvent, TKeyboardEvent> {\n  checkOptions(options);\n\n  const subscribers: AutocompleteSubscribers<TItem> = [];\n  const props = getDefaultProps(options, subscribers);\n  const store = createStore(stateReducer, props, onStoreStateChange);\n\n  const setters = getAutocompleteSetters({ store });\n  const propGetters = getPropGetters<\n    TItem,\n    TEvent,\n    TMouseEvent,\n    TKeyboardEvent\n  >({ props, refresh, store, navigator: props.navigator, ...setters });\n\n  function onStoreStateChange({ prevState, state }) {\n    props.onStateChange({\n      prevState,\n      state,\n      refresh,\n      navigator: props.navigator,\n      ...setters,\n    });\n  }\n\n  function refresh() {\n    return onInput({\n      event: new Event('input'),\n      nextState: { isOpen: store.getState().isOpen },\n      props,\n      navigator: props.navigator,\n      query: store.getState().query,\n      refresh,\n      store,\n      ...setters,\n    });\n  }\n\n  if (\n    options.insights &&\n    !props.plugins.some((plugin) => plugin.name === 'aa.algoliaInsightsPlugin')\n  ) {\n    const insightsParams =\n      typeof options.insights === 'boolean' ? {} : options.insights;\n    props.plugins.push(createAlgoliaInsightsPlugin(insightsParams));\n  }\n\n  props.plugins.forEach((plugin) =>\n    plugin.subscribe?.({\n      ...setters,\n      navigator: props.navigator,\n      refresh,\n      onSelect(fn) {\n        subscribers.push({ onSelect: fn });\n      },\n      onActive(fn) {\n        subscribers.push({ onActive: fn });\n      },\n      onResolve(fn) {\n        subscribers.push({ onResolve: fn });\n      },\n    })\n  );\n\n  injectMetadata({\n    metadata: getMetadata({ plugins: props.plugins, options }),\n    environment: props.environment,\n  });\n\n  return {\n    refresh,\n    navigator: props.navigator,\n    ...propGetters,\n    ...setters,\n  };\n}\n","import {\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n  Reducer,\n} from './types';\nimport { createCancelablePromiseList } from './utils';\n\ntype OnStoreStateChange<TItem extends BaseItem> = ({\n  prevState,\n  state,\n}: {\n  prevState: AutocompleteState<TItem>;\n  state: AutocompleteState<TItem>;\n}) => void;\n\nexport function createStore<TItem extends BaseItem>(\n  reducer: Reducer,\n  props: InternalAutocompleteOptions<TItem>,\n  onStoreStateChange: OnStoreStateChange<TItem>\n): AutocompleteStore<TItem> {\n  let state = props.initialState;\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action, payload) {\n      const prevState = { ...state };\n      state = reducer(state, {\n        type: action,\n        props,\n        payload,\n      });\n\n      onStoreStateChange({ state, prevState });\n    },\n    pendingRequests: createCancelablePromiseList(),\n  };\n}\n","import { CancelablePromise } from '.';\n\nexport type CancelablePromiseList<TValue> = {\n  /**\n   * Add a cancelable promise to the list.\n   *\n   * @param cancelablePromise The cancelable promise to add.\n   */\n  add(cancelablePromise: CancelablePromise<TValue>): CancelablePromise<TValue>;\n  /**\n   * Cancel all pending promises.\n   *\n   * Requests aren't actually stopped. All pending promises will settle, but\n   * attached handlers won't run.\n   */\n  cancelAll(): void;\n  /**\n   * Whether there are pending promises in the list.\n   */\n  isEmpty(): boolean;\n};\n\nexport function createCancelablePromiseList<\n  TValue\n>(): CancelablePromiseList<TValue> {\n  let list: Array<CancelablePromise<TValue>> = [];\n\n  return {\n    add(cancelablePromise) {\n      list.push(cancelablePromise);\n\n      return cancelablePromise.finally(() => {\n        list = list.filter((item) => item !== cancelablePromise);\n      });\n    },\n    cancelAll() {\n      list.forEach((promise) => promise.cancel());\n    },\n    isEmpty() {\n      return list.length === 0;\n    },\n  };\n}\n","import { flatten } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteApi,\n  AutocompleteCollection,\n  AutocompleteStore,\n  BaseItem,\n} from './types';\n\ninterface GetAutocompleteSettersOptions<TItem extends BaseItem> {\n  store: AutocompleteStore<TItem>;\n}\n\nexport function getAutocompleteSetters<TItem extends BaseItem>({\n  store,\n}: GetAutocompleteSettersOptions<TItem>) {\n  const setActiveItemId: AutocompleteApi<TItem>['setActiveItemId'] = (\n    value\n  ) => {\n    store.dispatch('setActiveItemId', value);\n  };\n\n  const setQuery: AutocompleteApi<TItem>['setQuery'] = (value) => {\n    store.dispatch('setQuery', value);\n  };\n\n  const setCollections: AutocompleteApi<TItem>['setCollections'] = (\n    rawValue\n  ) => {\n    let baseItemId = 0;\n    const value = rawValue.map<AutocompleteCollection<TItem>>((collection) => ({\n      ...collection,\n      // We flatten the stored items to support calling `getAlgoliaResults`\n      // from the source itself.\n      items: flatten(collection.items as any).map((item: any) => ({\n        ...item,\n        __autocomplete_id: baseItemId++,\n      })),\n    }));\n\n    store.dispatch('setCollections', value);\n  };\n\n  const setIsOpen: AutocompleteApi<TItem>['setIsOpen'] = (value) => {\n    store.dispatch('setIsOpen', value);\n  };\n\n  const setStatus: AutocompleteApi<TItem>['setStatus'] = (value) => {\n    store.dispatch('setStatus', value);\n  };\n\n  const setContext: AutocompleteApi<TItem>['setContext'] = (value) => {\n    store.dispatch('setContext', value);\n  };\n\n  return {\n    setActiveItemId,\n    setQuery,\n    setCollections,\n    setIsOpen,\n    setStatus,\n    setContext,\n  };\n}\n"],"names":["debounce","fn","time","timerId","undefined","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","flatten","values","reduce","a","b","concat","autocompleteId","getItemsCount","state","collections","sum","collection","items","isPrimitive","obj","Object","isEqual","first","second","keys","_i","_Object$keys","key","noop","userAgents","segment","version","createClickedEvent","_ref","item","_ref$items","index","__autocomplete_indexName","positions","findIndex","x","objectID","queryID","__autocomplete_queryID","algoliaSource","_slicedToArray","arr","i","isArray","_arrayWithHoles","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","push","value","err","return","_iterableToArrayLimit","o","minLen","_arrayLikeToArray","n","prototype","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_excluded","_excluded2","_typeof","_toConsumableArray","_arrayWithoutHoles","iter","_iterableToArray","_nonIterableSpread","_objectWithoutProperties","source","excluded","target","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","arg","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","_toPropertyKey","configurable","writable","chunk","chunkSize","chunks","objectIDs","mapToInsightsParamsApi","params","map","param","_ref2","createSearchInsightsApi","searchInsights","_split$map2","major","minor","canSendHeaders","split","sendToInsights","method","payloads","_items$0$__autocomple","__autocomplete_algoliaCredentials","headers","appId","apiKey","init","setUserToken","userToken","clickedObjectIDsAfterSearch","clickedObjectIDs","_len2","_key2","clickedFilters","_len3","_key3","convertedObjectIDsAfterSearch","_len4","_key4","convertedObjectIDs","_len5","_key5","convertedFilters","_len6","_key6","viewedObjectIDs","_len7","_key7","acc","_ref3","_ref4","payload","_ref5","viewedFilters","_len8","_key8","createViewedEvents","itemsByIndexName","current","_acc$current$__autoco","indexName","isAlgoliaInsightsHit","hit","ALGOLIA_INSIGHTS_VERSION","ALGOLIA_INSIGHTS_SRC","sendViewedObjectIDs","onItemsChange","insights","insightsEvents","event","eventName","createAlgoliaInsightsPlugin","options","_getOptions","_ref8","onSelect","_ref9","onActive","getOptions","providedInsightsClient","insightsClient","onSelectEvent","onActiveEvent","callback","window","safelyRunOnBrowser","pointer","AlgoliaAnalyticsObject","queue","environment","errorMessage","script","document","createElement","async","src","onerror","console","error","body","appendChild","cause","loadInsights","previousItems","debouncedOnStateChange","isOpen","subscribe","setContext","algoliaInsightsPlugin","__algoliaSearchParameters","clickAnalytics","getItems","_ref6","onStateChange","_ref7","__autocomplete_pluginOptions","createInternalCancelablePromise","promise","initialState","then","onfulfilled","onrejected","createCallback","catch","finally","onfinally","onCancelList","cancel","isCanceled","callbacks","cancelable","onResult","fallback","getNextActiveItemId","moveAmount","baseIndex","itemCount","defaultActiveItemId","numericIndex","getActiveItem","collectionIndex","collectionsCount","nextValue","activeItemId","getCollectionFromActiveItemId","isOffsetFound","counter","previousItemsOffset","currentCollection","getRelativeActiveItemId","itemInputValue","getItemInputValue","itemUrl","getItemUrl","regex","getDefaultProps","props","pluginSubscribers","_props$id","plugins","debug","openOnFocus","placeholder","autoFocus","stallThreshold","shouldPanelOpen","reshape","sources","id","query","completion","status","context","_props$onStateChange","_x$onStateChange","onSubmit","_props$onSubmit","_x$onSubmit","onReset","_props$onReset","_x$onReset","getSources","Promise","all","plugin","Boolean","seenSourceIds","resolve","maybeSource","sourceId","includes","Error","JSON","stringify","defaultSource","setIsOpen","onResolve","__default","normalizedSource","getNormalizedSources","nested","_x$onSelect","_x$onActive","_x$onResolve","navigator","navigate","location","assign","navigateNewTab","windowReference","open","focus","navigateNewWindow","isDescription","execute","preResolve","itemsOrDescription","description","contextParameters","requesterId","_state$context$key","requests","queries","transformResponse","searchClient","container","find","_container$items","request","maybeDescription","responses","postResolve","store","rawResults","matches","response","results","transform","hits","result","facetHits","_facetHits","facetHit","label","count","_highlightResult","highlighted","getState","every","basePromiseId","latestResolvedId","latestResolvedValue","lastStalledId","runConcurrentSafePromise","currentPromiseId","onInput","_ref$nextState","nextState","refresh","setters","setCollections","setQuery","setActiveItemId","setStatus","_nextState$isOpen","pendingRequests","add","originalSourcesBySourceId","sourcesBySourceId","_nextState$isOpen2","isPanelOpen","highlightedItem","getPropGetters","getAutocompleteId","instanceId","getEnvironmentProps","providedProps","inputElement","formElement","panelElement","onMouseDownOrTouchStart","isEmpty","some","contextNode","parent","child","contains","dispatch","cancelAll","onTouchStart","onMouseDown","onTouchMove","activeElement","blur","getRootProps","rest","role","getFormProps","action","noValidate","_providedProps$inputE","preventDefault","_providedProps$inputE2","_excluded3","getLabelProps","sourceIndex","_excluded5","htmlFor","getInputProps","_props$environment$na","onFocus","_ref2$maxLength","maxLength","_excluded4","activeItem","shouldFallbackKeyHint","userAgent","match","isSamsung","enterKeyHint","autoComplete","autoCorrect","autoCapitalize","spellCheck","type","onChange","currentTarget","onKeyDown","triggerScrollIntoView","nodeItem","getElementById","scrollIntoViewIfNeeded","scrollIntoView","triggerOnActive","nextActiveItemId","metaKey","ctrlKey","shiftKey","altKey","onBlur","onClick","getPanelProps","onMouseLeave","getListProps","_excluded6","getItemProps","_excluded7","__autocomplete_id","onMouseMove","getMetadata","_","_options$__autocomple","_options$__autocomple2","_options$__autocomple3","optionsKey","__autocomplete_metadata","extraOptions","ua","getCompletion","_getActiveItem","stateReducer","hasOwnProperty","subscribers","reducer","onStoreStateChange","list","prevState","cancelablePromise","createStore","rawValue","baseItemId","getAutocompleteSetters","propGetters","Event","insightsParams","_plugin$subscribe","_environment$navigato","_environment$navigato2","metadata","metadataContainer","headRef","querySelector","content","injectMetadata"],"mappings":"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"}