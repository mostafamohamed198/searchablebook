'use strict';

exports.__esModule = true;
exports.SendButton = exports.MessageInput = exports.MessageInputContainer = exports.Message = exports.TypingDot = exports.TypingIndicator = exports.MessagesContainer = exports.ChatContainer = exports.Chatbox = undefined;

var _styledBase = require('@emotion/styled-base');

var _styledBase2 = _interopRequireDefault(_styledBase);

var _templateObject = _taggedTemplateLiteralLoose(['\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-70%);\n  }\n  100% {\n    transform: translateY(0);\n  }\n'], ['\n  0% {\n    transform: translateY(0);\n  }\n  50% {\n    transform: translateY(-70%);\n  }\n  100% {\n    transform: translateY(0);\n  }\n']);

var _core = require('@emotion/core');

var _Button = require('./Button');

var _Button2 = _interopRequireDefault(_Button);

var _Input = require('./Input');

var _Input2 = _interopRequireDefault(_Input);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteralLoose(strings, raw) { strings.raw = raw; return strings; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return 'You have tried to stringify object returned from `css` function. It isn\'t supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).'; }

var Chatbox = exports.Chatbox = (0, _styledBase2.default)('div', {
	target: 'eqckaxs0',
	label: 'Chatbox'
})('position:relative;margin:0 auto;padding:10px;background-color:#fafafa;width:100%;box-shadow:rgb(0 0 0 / 20%) 0px 0px 6px;border-radius:6px;margin-bottom:20px;background-color:', function (props) {
	return props.theme && props.theme.colors ? props.theme.colors.backgroundColor : '#fff';
}, ';' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBS2lDIiwiZmlsZSI6Ii4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBrZXlmcmFtZXMgfSBmcm9tICdAZW1vdGlvbi9jb3JlJztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCBCdXR0b24gZnJvbSAnLi9CdXR0b24nO1xuaW1wb3J0IElucHV0IGZyb20gJy4vSW5wdXQnO1xuXG5leHBvcnQgY29uc3QgQ2hhdGJveCA9IHN0eWxlZC5kaXZgXG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0bWFyZ2luOiAwIGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGJhY2tncm91bmQtY29sb3I6ICNmYWZhZmE7XG5cdHdpZHRoOiAxMDAlO1xuXHRib3gtc2hhZG93OiByZ2IoMCAwIDAgLyAyMCUpIDBweCAwcHggNnB4O1xuXHRib3JkZXItcmFkaXVzOiA2cHg7XG5cdG1hcmdpbi1ib3R0b206IDIwcHg7XG5cdGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cblx0KHByb3BzLnRoZW1lICYmIHByb3BzLnRoZW1lLmNvbG9ycyA/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IgOiAnI2ZmZicpfTtcbmA7XG5leHBvcnQgY29uc3QgQ2hhdENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdGhlaWdodDogMTAwJTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHQuLS1haS1hbnN3ZXItZXJyb3ItY29udGFpbmVyIHtcblx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdGJvdHRvbTogMHB4O1xuXHRcdCR7cHJvcHMgPT4gKHByb3BzLnNob3dJbnB1dCA/ICdib3R0b206IDQ4cHg7JyA6ICcnKX07XG5cdFx0ei1pbmRleDogMTtcblx0XHRsZWZ0OiA1MCU7XG5cdFx0dHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuXHRcdHdpZHRoOiAxMDAlO1xuXG5cdFx0Li0tZGVmYXVsdC1lcnJvci1lbGVtZW50IHtcblx0XHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0XHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRcdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0XHRcdHBhZGRpbmc6IDEwcHg7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdDogJyNmZmYnKX07XG5cdFx0XHRib3gtc2hhZG93OiAwIC01cHggNXB4IC0ycHhcblx0XHRcdFx0JHtwcm9wcyA9PlxuXHRcdFx0KHByb3BzLnRoZW1lICYmIHByb3BzLnRoZW1lLmNvbG9ycyAmJiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yXG5cdFx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ6ICcjZmZmJyl9O1xuXG5cdFx0XHRzcGFuIHtcblx0XHRcdFx0bWFyZ2luLWJvdHRvbTogNXB4O1xuXHRcdFx0fVxuXG5cdFx0XHRidXR0b24ge1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IE1lc3NhZ2VzQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcblx0bWF4LWhlaWdodDogNDAwcHg7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcblx0cGFkZGluZzogMTBweDtcblx0ZGlzcGxheTogZmxleDtcblx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0bWluLWhlaWdodDogMjAwcHg7XG5cbn19O1xuYDtcbmNvbnN0IHR5cGluZ0RvdHMgPSBrZXlmcmFtZXNgXG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCk7XG4gIH1cbiAgNTAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTcwJSk7XG4gIH1cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgVHlwaW5nSW5kaWNhdG9yID0gc3R5bGVkLmRpdmBcblx0ZGlzcGxheTogZmxleDtcblx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0anVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5cdG1hcmdpbjogNXB4ICFpbXBvcnRhbnQ7XG5gO1xuXG5leHBvcnQgY29uc3QgVHlwaW5nRG90ID0gc3R5bGVkLmRpdmBcblx0d2lkdGg6IDZweDtcblx0aGVpZ2h0OiA2cHg7XG5cdGJhY2tncm91bmQtY29sb3I6ICR7cHJvcHMgPT5cblx0KHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5wcmltYXJ5VGV4dENvbG9yXG5cdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdGJvcmRlci1yYWRpdXM6IDUwJTtcblx0bWFyZ2luOiAwIDJweCAhaW1wb3J0YW50O1xuXHRhbmltYXRpb246ICR7dHlwaW5nRG90c30gMXMgaW5maW5pdGU7XG5cdCY6bnRoLWNoaWxkKDIpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuMnM7XG5cdH1cblx0JjpudGgtY2hpbGQoMykge1xuXHRcdGFuaW1hdGlvbi1kZWxheTogMC40cztcblx0fVxuYDtcblxuZXhwb3J0IGNvbnN0IE1lc3NhZ2UgPSBzdHlsZWQuZGl2YFxuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeUNvbG9yXG5cdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5ib3JkZXJDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXG5cdHBhZGRpbmc6IDEwcHg7XG5cdGJvcmRlci1yYWRpdXM6IDdweDtcblx0bWFyZ2luLWJvdHRvbTogMTBweDtcblx0bWF4LXdpZHRoOiA4MCU7XG5cdGFsaWduLXNlbGY6ICR7cHJvcHMgPT4gKHByb3BzLmlzU2VuZGVyID8gJ2ZsZXgtZW5kJyA6ICdmbGV4LXN0YXJ0Jyl9O1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdGJvcmRlcjogMXB4IHNvbGlkO1xuXHRjb2xvcjogJHtwcm9wcyA9PlxuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXN0ZWQtdGVybmFyeVxuXHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5wcmltYXJ5VGV4dENvbG9yXG5cdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdGh0bWwsXG5cdGJvZHksXG5cdGRpdixcblx0c3Bhbixcblx0YXBwbGV0LFxuXHRvYmplY3QsXG5cdGlmcmFtZSxcblx0aDEsXG5cdGgyLFxuXHRoMyxcblx0aDQsXG5cdGg1LFxuXHRoNixcblx0cCxcblx0YmxvY2txdW90ZSxcblx0cHJlLFxuXHRhLFxuXHRhYmJyLFxuXHRhY3JvbnltLFxuXHRhZGRyZXNzLFxuXHRiaWcsXG5cdGNpdGUsXG5cdGNvZGUsXG5cdGRlbCxcblx0ZGZuLFxuXHRlbSxcblx0aW1nLFxuXHRpbnMsXG5cdGtiZCxcblx0cSxcblx0cyxcblx0c2FtcCxcblx0c21hbGwsXG5cdHN0cmlrZSxcblx0c3Ryb25nLFxuXHRzdWIsXG5cdHN1cCxcblx0dHQsXG5cdHZhcixcblx0Yixcblx0dSxcblx0aSxcblx0Y2VudGVyLFxuXHRkbCxcblx0ZHQsXG5cdGRkLFxuXHRvbCxcblx0dWwsXG5cdGxpLFxuXHRmaWVsZHNldCxcblx0Zm9ybSxcblx0bGFiZWwsXG5cdGxlZ2VuZCxcblx0dGFibGUsXG5cdGNhcHRpb24sXG5cdHRib2R5LFxuXHR0Zm9vdCxcblx0dGhlYWQsXG5cdHRyLFxuXHR0aCxcblx0dGQsXG5cdGFydGljbGUsXG5cdGFzaWRlLFxuXHRjYW52YXMsXG5cdGRldGFpbHMsXG5cdGVtYmVkLFxuXHRmaWd1cmUsXG5cdGZpZ2NhcHRpb24sXG5cdGZvb3Rlcixcblx0aGVhZGVyLFxuXHRoZ3JvdXAsXG5cdG1lbnUsXG5cdG5hdixcblx0b3V0cHV0LFxuXHRydWJ5LFxuXHRzZWN0aW9uLFxuXHRzdW1tYXJ5LFxuXHR0aW1lLFxuXHRtYXJrLFxuXHRhdWRpbyxcblx0dmlkZW8ge1xuXHRcdG1hcmdpbjogMDtcblx0XHRwYWRkaW5nOiAwO1xuXHRcdGJvcmRlcjogMDtcblx0XHRmb250LXNpemU6IDEwMCU7XG5cdFx0Zm9udDogaW5oZXJpdDtcblx0XHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG5cdH1cblx0cHJlIHtcblx0XHRtYXJnaW46IDEwcHggYXV0bztcblx0fVxuXHR0YWJsZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0XHRib3JkZXItc3BhY2luZzogMDtcblx0fVxuXHR0ciB7XG5cdFx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2M7XG5cdH1cblx0dGgsXG5cdHRkIHtcblx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHRcdHBhZGRpbmc6IDRweDtcblx0XHRib3JkZXI6IDFweCBzb2xpZDtcblx0XHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuXHR9XG5cdHByZSxcblx0Y29kZSB7XG5cdFx0YmFja2dyb3VuZDogJHtwcm9wcyA9PlxuXHRcdFx0XHRcdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5ib3JkZXJDb2xvclxuXHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yKX07XG5cdFx0cGFkZGluZzogMC42ZW0gMC40ZW07XG5cdH1cblxuXHRjb2RlIHtcblx0XHRsaW5lLWhlaWdodDogbm9ybWFsO1xuXG5cdFx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXN0ZWQtdGVybmFyeVxuXHRcdFx0XHRcdFx0XHQoIXByb3BzLmlzU2VuZGVyXG5cdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0XHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5wcmltYXJ5VGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3Jcblx0XHRcdFx0XHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0XHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdFx0Zm9udC1zaXplOiA4NSU7XG5cdFx0cGFkZGluZzogMC4yZW0gMC40ZW07XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXRDb250YWluZXIgPSBzdHlsZWQuZm9ybWBcblx0ZGlzcGxheTogZmxleDtcblx0cGFkZGluZy10b3A6IDEycHg7XG5cdGFsaWduLWl0ZW1zOiBzdHJldGNoO1xuXHRtYXJnaW4tdG9wOiAxMHB4O1xuYDtcblxuZXhwb3J0IGNvbnN0IE1lc3NhZ2VJbnB1dCA9IHN0eWxlZChJbnB1dClgXG5cdHdpZHRoOiAxMDAlO1xuXHRib3JkZXItcmFkaXVzOiA1cHg7XG5cdGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG5cdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXG5cdDo6cGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG5cdFx0Y29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcn07XG5cdH1cblxuXHQ6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG5cdFx0Y29sb3I6ICR7cHJvcHMgPT4gcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcn07XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBTZW5kQnV0dG9uID0gc3R5bGVkKEJ1dHRvbilgXG5cdGJvcmRlcjogbm9uZTtcblx0Y29sb3I6ICNmZmZmZmY7XG5cdGN1cnNvcjogcG9pbnRlcjtcblx0Zm9udC1zaXplOiAxNnB4O1xuXHRtYXJnaW4tbGVmdDogOHB4O1xuXHRvdXRsaW5lOiBub25lO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5gO1xuIl19 */'));
var ChatContainer = exports.ChatContainer = (0, _styledBase2.default)('div', {
	target: 'eqckaxs1',
	label: 'ChatContainer'
})('display:flex;flex-direction:column;height:100%;position:relative;.--ai-answer-error-container{text-align:center;position:absolute;bottom:0px;', function (props) {
	return props.showInput ? 'bottom: 48px;' : '';
}, ';z-index:1;left:50%;transform:translateX(-50%);width:100%;.--default-error-element{display:flex;flex-direction:column;align-items:center;padding:10px;background-color:', function (props) {
	return props.theme && props.theme.colors && props.theme.colors.backgroundColor ? props.theme.colors.backgroundColor : '#fff';
}, ';box-shadow:0 -5px 5px -2px ', function (props) {
	return props.theme && props.theme.colors && props.theme.colors.backgroundColor ? props.theme.colors.backgroundColor : '#fff';
}, ';span{margin-bottom:5px;}button{}}}' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUJ1QyIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */'));

var MessagesContainer = exports.MessagesContainer = (0, _styledBase2.default)('div', {
	target: 'eqckaxs2',
	label: 'MessagesContainer'
})(process.env.NODE_ENV === 'production' ? {
	name: '4xnanv',
	styles: 'max-height:400px;overflow-y:auto;padding:10px;display:flex;flex-direction:column;min-height:200px;}};'
} : {
	name: '4xnanv',
	styles: 'max-height:400px;overflow-y:auto;padding:10px;display:flex;flex-direction:column;min-height:200px;}};',
	map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBeUQyQyIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */',
	toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});
var typingDots = (0, _core.keyframes)(_templateObject);

var TypingIndicator = exports.TypingIndicator = (0, _styledBase2.default)('div', {
	target: 'eqckaxs3',
	label: 'TypingIndicator'
})(process.env.NODE_ENV === 'production' ? {
	name: '6i67tq',
	styles: 'display:flex;align-items:center;justify-content:center;margin:5px !important;'
} : {
	name: '6i67tq',
	styles: 'display:flex;align-items:center;justify-content:center;margin:5px !important;',
	map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0V5QyIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */',
	toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var TypingDot = exports.TypingDot = (0, _styledBase2.default)('div', {
	target: 'eqckaxs4',
	label: 'TypingDot'
})('width:6px;height:6px;background-color:', function (props) {
	return props.themePreset !== 'dark' ? props.theme.colors.primaryTextColor : props.theme.colors.textColor;
}, ';border-radius:50%;margin:0 2px !important;animation:', typingDots, ' 1s infinite;&:nth-child(2){animation-delay:0.2s;}&:nth-child(3){animation-delay:0.4s;}' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0ZtQyIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */'));

var Message = exports.Message = (0, _styledBase2.default)('div', {
	target: 'eqckaxs5',
	label: 'Message'
})('background-color:', function (props) {
	return (
		// eslint-disable-next-line no-nested-ternary
		!props.isSender ? props.themePreset !== 'dark' ? props.theme.colors.primaryColor : props.theme.colors.borderColor : props.theme.colors.backgroundColor
	);
}, ';padding:10px;border-radius:7px;margin-bottom:10px;max-width:80%;align-self:', function (props) {
	return props.isSender ? 'flex-end' : 'flex-start';
}, ';display:inline-block;border:1px solid;color:', function (props) {
	return (
		// eslint-disable-next-line no-nested-ternary
		!props.isSender ? props.themePreset !== 'dark' ? props.theme.colors.primaryTextColor : props.theme.colors.textColor : props.theme.colors.textColor
	);
}, ';position:relative;html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;}pre{margin:10px auto;}table{margin:10px auto;border-collapse:collapse;border-spacing:0;}tr{border-bottom:1px solid #ccc;}th,td{text-align:left;padding:4px;border:1px solid;border-collapse:collapse;}pre,code{background:', function (props) {
	return props.themePreset !== 'dark' ? props.theme.colors.borderColor : props.theme.colors.backgroundColor;
}, ';padding:0.6em 0.4em;}code{line-height:normal;color:', function (props) {
	return (
		// eslint-disable-next-line no-nested-ternary
		!props.isSender ? props.themePreset !== 'dark' ? props.theme.colors.primaryTextColor : props.theme.colors.textColor : props.theme.colors.textColor
	);
}, ';border-radius:3px;font-size:85%;padding:0.2em 0.4em;}' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0dpQyIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */'));

var MessageInputContainer = exports.MessageInputContainer = (0, _styledBase2.default)('form', {
	target: 'eqckaxs6',
	label: 'MessageInputContainer'
})(process.env.NODE_ENV === 'production' ? {
	name: '1vrotcx',
	styles: 'display:flex;padding-top:12px;align-items:stretch;margin-top:10px;'
} : {
	name: '1vrotcx',
	styles: 'display:flex;padding-top:12px;align-items:stretch;margin-top:10px;',
	map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbVFnRCIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */',
	toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var MessageInput = exports.MessageInput = ( /*#__PURE__*/0, _styledBase2.default)(_Input2.default, {
	target: 'eqckaxs7',
	label: 'MessageInput'
})('width:100%;border-radius:5px;border:1px solid #ccc;color:', function (props) {
	return props.theme.colors.textColor;
}, ';::placeholder{color:', function (props) {
	return props.theme.colors.textColor;
}, ';}:-ms-input-placeholder{color:', function (props) {
	return props.theme.colors.textColor;
}, ';}::-ms-input-placeholder{color:', function (props) {
	return props.theme.colors.textColor;
}, ';}' + (process.env.NODE_ENV === 'production' ? '' : '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMFF5QyIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */'));

var SendButton = exports.SendButton = ( /*#__PURE__*/0, _styledBase2.default)(_Button2.default, {
	target: 'eqckaxs8',
	label: 'SendButton'
})(process.env.NODE_ENV === 'production' ? {
	name: '1w0nqlb',
	styles: 'border:none;color:#ffffff;cursor:pointer;font-size:16px;margin-left:8px;outline:none;padding:10px;text-align:center;'
} : {
	name: '1w0nqlb',
	styles: 'border:none;color:#ffffff;cursor:pointer;font-size:16px;margin-left:8px;outline:none;padding:10px;text-align:center;',
	map: '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdHlsZXMvQUlBbnN3ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNlJ3QyIsImZpbGUiOiIuLi8uLi9zcmMvc3R5bGVzL0FJQW5zd2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsga2V5ZnJhbWVzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcblxuZXhwb3J0IGNvbnN0IENoYXRib3ggPSBzdHlsZWQuZGl2YFxuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdG1hcmdpbjogMCBhdXRvO1xuXHRwYWRkaW5nOiAxMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAjZmFmYWZhO1xuXHR3aWR0aDogMTAwJTtcblx0Ym94LXNoYWRvdzogcmdiKDAgMCAwIC8gMjAlKSAwcHggMHB4IDZweDtcblx0Ym9yZGVyLXJhZGl1czogNnB4O1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgPyBwcm9wcy50aGVtZS5jb2xvcnMuYmFja2dyb3VuZENvbG9yIDogJyNmZmYnKX07XG5gO1xuZXhwb3J0IGNvbnN0IENoYXRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuXHRkaXNwbGF5OiBmbGV4O1xuXHRmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXHRoZWlnaHQ6IDEwMCU7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0Li0tYWktYW5zd2VyLWVycm9yLWNvbnRhaW5lciB7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRib3R0b206IDBweDtcblx0XHQke3Byb3BzID0+IChwcm9wcy5zaG93SW5wdXQgPyAnYm90dG9tOiA0OHB4OycgOiAnJyl9O1xuXHRcdHotaW5kZXg6IDE7XG5cdFx0bGVmdDogNTAlO1xuXHRcdHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcblx0XHR3aWR0aDogMTAwJTtcblxuXHRcdC4tLWRlZmF1bHQtZXJyb3ItZWxlbWVudCB7XG5cdFx0XHRkaXNwbGF5OiBmbGV4O1xuXHRcdFx0ZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcblx0XHRcdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdFx0XHRwYWRkaW5nOiAxMHB4O1xuXHRcdFx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuXHQocHJvcHMudGhlbWUgJiYgcHJvcHMudGhlbWUuY29sb3JzICYmIHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHQ6ICcjZmZmJyl9O1xuXHRcdFx0Ym94LXNoYWRvdzogMCAtNXB4IDVweCAtMnB4XG5cdFx0XHRcdCR7cHJvcHMgPT5cblx0XHRcdChwcm9wcy50aGVtZSAmJiBwcm9wcy50aGVtZS5jb2xvcnMgJiYgcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvclxuXHRcdFx0XHQ/IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3Jcblx0XHRcdFx0OiAnI2ZmZicpfTtcblxuXHRcdFx0c3BhbiB7XG5cdFx0XHRcdG1hcmdpbi1ib3R0b206IDVweDtcblx0XHRcdH1cblxuXHRcdFx0YnV0dG9uIHtcblx0XHRcdH1cblx0XHR9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlc0NvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG5cdG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG5cdHBhZGRpbmc6IDEwcHg7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdG1pbi1oZWlnaHQ6IDIwMHB4O1xuXG59fTtcbmA7XG5jb25zdCB0eXBpbmdEb3RzID0ga2V5ZnJhbWVzYFxuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC03MCUpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0luZGljYXRvciA9IHN0eWxlZC5kaXZgXG5cdGRpc3BsYXk6IGZsZXg7XG5cdGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRtYXJnaW46IDVweCAhaW1wb3J0YW50O1xuYDtcblxuZXhwb3J0IGNvbnN0IFR5cGluZ0RvdCA9IHN0eWxlZC5kaXZgXG5cdHdpZHRoOiA2cHg7XG5cdGhlaWdodDogNnB4O1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAke3Byb3BzID0+XG5cdChwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvcil9O1xuXHRib3JkZXItcmFkaXVzOiA1MCU7XG5cdG1hcmdpbjogMCAycHggIWltcG9ydGFudDtcblx0YW5pbWF0aW9uOiAke3R5cGluZ0RvdHN9IDFzIGluZmluaXRlO1xuXHQmOm50aC1jaGlsZCgyKSB7XG5cdFx0YW5pbWF0aW9uLWRlbGF5OiAwLjJzO1xuXHR9XG5cdCY6bnRoLWNoaWxkKDMpIHtcblx0XHRhbmltYXRpb24tZGVsYXk6IDAuNHM7XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcblx0YmFja2dyb3VuZC1jb2xvcjogJHtwcm9wcyA9PlxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5lc3RlZC10ZXJuYXJ5XG5cdCghcHJvcHMuaXNTZW5kZXJcblx0XHQ/IHByb3BzLnRoZW1lUHJlc2V0ICE9PSAnZGFyaydcblx0XHRcdD8gcHJvcHMudGhlbWUuY29sb3JzLnByaW1hcnlDb2xvclxuXHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy5iYWNrZ3JvdW5kQ29sb3IpfTtcblxuXHRwYWRkaW5nOiAxMHB4O1xuXHRib3JkZXItcmFkaXVzOiA3cHg7XG5cdG1hcmdpbi1ib3R0b206IDEwcHg7XG5cdG1heC13aWR0aDogODAlO1xuXHRhbGlnbi1zZWxmOiAke3Byb3BzID0+IChwcm9wcy5pc1NlbmRlciA/ICdmbGV4LWVuZCcgOiAnZmxleC1zdGFydCcpfTtcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRib3JkZXI6IDFweCBzb2xpZDtcblx0Y29sb3I6ICR7cHJvcHMgPT5cblx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdCghcHJvcHMuaXNTZW5kZXJcblx0XHRcdFx0PyBwcm9wcy50aGVtZVByZXNldCAhPT0gJ2RhcmsnXG5cdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLnRleHRDb2xvclxuXHRcdFx0XHQ6IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3IpfTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRodG1sLFxuXHRib2R5LFxuXHRkaXYsXG5cdHNwYW4sXG5cdGFwcGxldCxcblx0b2JqZWN0LFxuXHRpZnJhbWUsXG5cdGgxLFxuXHRoMixcblx0aDMsXG5cdGg0LFxuXHRoNSxcblx0aDYsXG5cdHAsXG5cdGJsb2NrcXVvdGUsXG5cdHByZSxcblx0YSxcblx0YWJicixcblx0YWNyb255bSxcblx0YWRkcmVzcyxcblx0YmlnLFxuXHRjaXRlLFxuXHRjb2RlLFxuXHRkZWwsXG5cdGRmbixcblx0ZW0sXG5cdGltZyxcblx0aW5zLFxuXHRrYmQsXG5cdHEsXG5cdHMsXG5cdHNhbXAsXG5cdHNtYWxsLFxuXHRzdHJpa2UsXG5cdHN0cm9uZyxcblx0c3ViLFxuXHRzdXAsXG5cdHR0LFxuXHR2YXIsXG5cdGIsXG5cdHUsXG5cdGksXG5cdGNlbnRlcixcblx0ZGwsXG5cdGR0LFxuXHRkZCxcblx0b2wsXG5cdHVsLFxuXHRsaSxcblx0ZmllbGRzZXQsXG5cdGZvcm0sXG5cdGxhYmVsLFxuXHRsZWdlbmQsXG5cdHRhYmxlLFxuXHRjYXB0aW9uLFxuXHR0Ym9keSxcblx0dGZvb3QsXG5cdHRoZWFkLFxuXHR0cixcblx0dGgsXG5cdHRkLFxuXHRhcnRpY2xlLFxuXHRhc2lkZSxcblx0Y2FudmFzLFxuXHRkZXRhaWxzLFxuXHRlbWJlZCxcblx0ZmlndXJlLFxuXHRmaWdjYXB0aW9uLFxuXHRmb290ZXIsXG5cdGhlYWRlcixcblx0aGdyb3VwLFxuXHRtZW51LFxuXHRuYXYsXG5cdG91dHB1dCxcblx0cnVieSxcblx0c2VjdGlvbixcblx0c3VtbWFyeSxcblx0dGltZSxcblx0bWFyayxcblx0YXVkaW8sXG5cdHZpZGVvIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0cGFkZGluZzogMDtcblx0XHRib3JkZXI6IDA7XG5cdFx0Zm9udC1zaXplOiAxMDAlO1xuXHRcdGZvbnQ6IGluaGVyaXQ7XG5cdFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuXHR9XG5cdHByZSB7XG5cdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdH1cblx0dGFibGUge1xuXHRcdG1hcmdpbjogMTBweCBhdXRvO1xuXHRcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG5cdFx0Ym9yZGVyLXNwYWNpbmc6IDA7XG5cdH1cblx0dHIge1xuXHRcdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjY2NjO1xuXHR9XG5cdHRoLFxuXHR0ZCB7XG5cdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRwYWRkaW5nOiA0cHg7XG5cdFx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcblx0fVxuXHRwcmUsXG5cdGNvZGUge1xuXHRcdGJhY2tncm91bmQ6ICR7cHJvcHMgPT5cblx0XHRcdFx0XHQocHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMuYm9yZGVyQ29sb3Jcblx0XHRcdFx0XHRcdDogcHJvcHMudGhlbWUuY29sb3JzLmJhY2tncm91bmRDb2xvcil9O1xuXHRcdHBhZGRpbmc6IDAuNmVtIDAuNGVtO1xuXHR9XG5cblx0Y29kZSB7XG5cdFx0bGluZS1oZWlnaHQ6IG5vcm1hbDtcblxuXHRcdGNvbG9yOiAke3Byb3BzID0+XG5cdFx0XHRcdFx0XHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmVzdGVkLXRlcm5hcnlcblx0XHRcdFx0XHRcdFx0KCFwcm9wcy5pc1NlbmRlclxuXHRcdFx0XHRcdFx0XHRcdD8gcHJvcHMudGhlbWVQcmVzZXQgIT09ICdkYXJrJ1xuXHRcdFx0XHRcdFx0XHRcdFx0PyBwcm9wcy50aGVtZS5jb2xvcnMucHJpbWFyeVRleHRDb2xvclxuXHRcdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yXG5cdFx0XHRcdFx0XHRcdFx0OiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yKX07XG5cdFx0Ym9yZGVyLXJhZGl1czogM3B4O1xuXHRcdGZvbnQtc2l6ZTogODUlO1xuXHRcdHBhZGRpbmc6IDAuMmVtIDAuNGVtO1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgTWVzc2FnZUlucHV0Q29udGFpbmVyID0gc3R5bGVkLmZvcm1gXG5cdGRpc3BsYXk6IGZsZXg7XG5cdHBhZGRpbmctdG9wOiAxMnB4O1xuXHRhbGlnbi1pdGVtczogc3RyZXRjaDtcblx0bWFyZ2luLXRvcDogMTBweDtcbmA7XG5cbmV4cG9ydCBjb25zdCBNZXNzYWdlSW5wdXQgPSBzdHlsZWQoSW5wdXQpYFxuXHR3aWR0aDogMTAwJTtcblx0Ym9yZGVyLXJhZGl1czogNXB4O1xuXHRib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xuXHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblxuXHQ6OnBsYWNlaG9sZGVyIHtcblx0XHRjb2xvcjogJHtwcm9wcyA9PiBwcm9wcy50aGVtZS5jb2xvcnMudGV4dENvbG9yfTtcblx0fVxuXG5cdDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5cblx0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xuXHRcdGNvbG9yOiAke3Byb3BzID0+IHByb3BzLnRoZW1lLmNvbG9ycy50ZXh0Q29sb3J9O1xuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgU2VuZEJ1dHRvbiA9IHN0eWxlZChCdXR0b24pYFxuXHRib3JkZXI6IG5vbmU7XG5cdGNvbG9yOiAjZmZmZmZmO1xuXHRjdXJzb3I6IHBvaW50ZXI7XG5cdGZvbnQtc2l6ZTogMTZweDtcblx0bWFyZ2luLWxlZnQ6IDhweDtcblx0b3V0bGluZTogbm9uZTtcblx0cGFkZGluZzogMTBweDtcblx0dGV4dC1hbGlnbjogY2VudGVyO1xuYDtcbiJdfQ== */',
	toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});