import Searchkit, { RequestOptions, MultipleQueriesQuery } from 'searchkit';

interface InstantSearchElasticsearchAdapterConfig {
    url: string;
    headers?: Record<string, string> | (() => Record<string, string>);
}
type Config = InstantSearchElasticsearchAdapterConfig | Searchkit;
declare class InstantSearchElasticsearchAdapter {
    private config;
    private requestOptions?;
    private cache;
    constructor(config: Config, requestOptions?: RequestOptions | undefined);
    clearCache(): Promise<void>;
    private getHeaders;
    search(instantsearchRequests: Array<MultipleQueriesQuery>): Promise<unknown>;
    searchForFacetValues(instantsearchRequests: Array<MultipleQueriesQuery>): Promise<any>;
}
declare const createClient: (config: Config, requestOptions?: RequestOptions) => InstantSearchElasticsearchAdapter;

export { createClient as default };
