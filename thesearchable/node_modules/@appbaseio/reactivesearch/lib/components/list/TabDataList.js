'use strict';

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _helper = require('@appbaseio/reactivecore/lib/utils/helper');

var _types = require('@appbaseio/reactivecore/lib/utils/types');

var _types2 = _interopRequireDefault(_types);

var _propTypes = require('prop-types');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Tabs = require('../../styles/Tabs');

var _SingleDataList = require('./SingleDataList');

var _SingleDataList2 = _interopRequireDefault(_SingleDataList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Data property has two properties: label and value.
 * `label` is unique and is used for comparison.
 * `value` may not be unique and is used for querying the index.
 *
 * Data List componenents use label as value.
 * This is also added to the `isComponentUsesLabelAsValue` in reactivecore.
 */

var TabDataList = function TabDataList(props) {
	var renderItem = props.renderItem;

	var defaultItem = function defaultItem(item) {
		return item.label + ' ' + (props.showCount && item.count ? '(' + item.count + ')' : '');
	};

	if ((0, _helper.hasCustomRenderer)(props) || props.showRadio) {
		return _react2.default.createElement(_SingleDataList2.default, props);
	}

	return _react2.default.createElement(_SingleDataList2.default, _extends({}, props, {
		showSearch: props.showSearch,
		render: function render(_ref) {
			var data = _ref.data,
			    value = _ref.value,
			    handleChange = _ref.handleChange,
			    total = _ref.total;
			return _react2.default.createElement(
				_Tabs.TabContainer,
				{ vertical: props.displayAsVertical },
				props.selectAllLabel ? _react2.default.createElement(
					_Tabs.TabLink,
					{
						onClick: function onClick() {
							return handleChange(props.selectAllLabel);
						},
						selected: props.selectAllLabel === value,
						vertical: props.displayAsVertical,
						key: props.selectAllLabel
					},
					defaultItem({
						label: props.selectAllLabel,
						value: props.selectAllLabel,
						count: total
					})
				) : null,
				data.map(function (item) {
					return _react2.default.createElement(
						_Tabs.TabLink,
						{
							onClick: function onClick() {
								return handleChange(item.label);
							},
							selected: item.label === value,
							vertical: props.displayAsVertical,
							key: item.label
						},
						renderItem ? renderItem(item.label, item.count, item.label === value) : defaultItem(item)
					);
				})
			);
		}
	}));
};

TabDataList.defaultProps = {
	displayAsVertical: false,
	showRadio: false,
	showSearch: false
};

TabDataList.propTypes = {
	displayAsVertical: _propTypes.bool,
	children: _types2.default.func,
	componentId: _types2.default.stringRequired,
	dataField: _types2.default.stringRequired,
	onChange: _types2.default.func,
	react: _types2.default.react,
	title: _types2.default.title,
	URLParams: _types2.default.bool,
	showCount: _types2.default.bool,
	showRadio: _types2.default.bool,
	showSearch: _types2.default.bool,
	render: _types2.default.func,
	renderItem: _types2.default.func,
	renderNoResults: _types2.default.func,
	index: _types2.default.string,
	endpoint: _types2.default.endpoint,
	selectAllLabel: _types2.default.string
};

exports.default = TabDataList;